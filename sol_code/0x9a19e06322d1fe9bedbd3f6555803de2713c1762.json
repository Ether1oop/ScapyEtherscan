{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n/*\r\noooooo   oooooo     oooo oooo         o8o      .             \r\n `888.    `888.     .8'  `888         `\"'    .o8             \r\n  `888.   .8888.   .8'    888 .oo.   oooo  .o888oo  .ooooo.  \r\n   `888  .8'`888. .8'     888P\"Y88b  `888    888   d88' `88b \r\n    `888.8'  `888.8'      888   888   888    888   888ooo888 \r\n     `888'    `888'       888   888   888    888 . 888    .o \r\n      `8'      `8'       o888o o888o o888o   \"888\" `Y8bod8P' \r\n*/\r\n\r\npragma solidity ^0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface IWhiteInstance {\r\n\r\n    function token() external view returns (address);\r\n    function denomination() external view returns (uint256);\r\n    function deposit(bytes32 commitment) external payable;\r\n    function withdraw(\r\n        bytes calldata proof,\r\n        bytes32 root,\r\n        bytes32 nullifierHash,\r\n        address payable recipient,\r\n        address payable relayer,\r\n        uint256 fee,\r\n        uint256 refund\r\n    ) external payable;\r\n}\r\n\r\n\r\ncontract WhiteProxyLight {\r\n\r\n    event EncryptedNote(address indexed sender, bytes encryptedNote);\r\n\r\n    function deposit(\r\n        IWhiteInstance _white,\r\n        bytes32 _commitment,\r\n        bytes calldata _encryptedNote\r\n    ) external payable {\r\n        _white.deposit{ value: msg.value }(_commitment);\r\n        emit EncryptedNote(msg.sender, _encryptedNote);\r\n    }\r\n\r\n    function withdraw(\r\n        IWhiteInstance _white,\r\n        bytes calldata _proof,\r\n        bytes32 _root,\r\n        bytes32 _nullifierHash,\r\n        address payable _recipient,\r\n        address payable _relayer,\r\n        uint256 _fee,\r\n        uint256 _refund\r\n    ) external payable {\r\n        _white.withdraw{ value: msg.value }(_proof, _root, _nullifierHash, _recipient, _relayer, _fee, _refund);\r\n    }\r\n\r\n    function backupNotes(bytes[] calldata _encryptedNotes) external {\r\n        for (uint256 i = 0; i < _encryptedNotes.length; i++) {\r\n        emit EncryptedNote(msg.sender, _encryptedNotes[i]);\r\n        }\r\n    }\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedNote\",\"type\":\"bytes\"}],\"name\":\"EncryptedNote\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_encryptedNotes\",\"type\":\"bytes[]\"}],\"name\":\"backupNotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IWhiteInstance\",\"name\":\"_white\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_encryptedNote\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IWhiteInstance\",\"name\":\"_white\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "WhiteProxyLight", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://29e8dc3cf0e0a4c146534792f7a1929958025589d9125f829165b5c4b868653a"}]}