{"status": "1", "message": "OK", "result": [{"SourceCode": "// Sources flattened with hardhat v2.10.1 https://hardhat.org\r\n\r\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v4.4.2\r\n\r\n// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol@v4.4.2\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/Context.sol@v4.4.2\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC20/ERC20.sol@v4.4.2\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n\r\n        _afterTokenTransfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/access/Ownable.sol@v4.4.2\r\n\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n\r\n// File contracts/PulseUnityToken.sol\r\n\r\npragma solidity >=0.8.0;\r\n/**\r\n * @notice Implements a basic ERC20 staking token with incentive distribution.\r\n */\r\n\r\ncontract PulseUnity is ERC20, Ownable {\r\n    address marketing_wallet = 0xC6B357ff3e81b75d13aaCc97695f92A0Fda67c48;\r\n    address dev_wallet = 0x2FC4D047a71f619BF63ab82449491eF44D03a3F7;\r\n    address junkman_wallet = 0xcb55D80c65E610206A0176488e135B4dcB955980;\r\n    address deployer_wallet = 0xb7E401C952EB244CC4a079eF0BD20a471dF71d36;\r\n    /**\r\n     * @notice The constructor for the Staking Token.\r\n     */\r\n    constructor(address[] memory _holders, uint[] memory _holdings)\r\n        ERC20(\"Pulse Unity Token\", \"PLSU\")\r\n    {\r\n        uint256 sentPU = 0;\r\n        uint256 maxSupply = 0;\r\n        //marketing wallet\r\n        //dev wallet\r\n        for (uint i = 0; i < _holdings.length; i++) {\r\n            sentPU += _holdings[i];\r\n            _mint(_holders[i], _holdings[i] * 1e18);\r\n        }\r\n\r\n        maxSupply = sentPU * 5 * 1e18;\r\n\r\n        _mint(marketing_wallet, (maxSupply * 5) / 100);\r\n        _mint(dev_wallet, (maxSupply * 4) / 100);\r\n        _mint(junkman_wallet, (maxSupply * 1) / 100);\r\n        _mint(deployer_wallet, (maxSupply * 70) / 100);\r\n    }\r\n\r\n    function changeMarketWallet(address _newMarketingWallet)\r\n        external\r\n        onlyOwner\r\n    {\r\n        marketing_wallet = _newMarketingWallet;\r\n    }\r\n\r\n    function changeJunkmanWallet(address _newJunkmanWallet) external onlyOwner {\r\n        junkman_wallet = _newJunkmanWallet;\r\n    }\r\n\r\n    function changeDevWallet(address _newDevWallet) external onlyOwner {\r\n        dev_wallet = _newDevWallet;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_holders\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_holdings\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newDevWallet\",\"type\":\"address\"}],\"name\":\"changeDevWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newJunkmanWallet\",\"type\":\"address\"}],\"name\":\"changeJunkmanWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMarketingWallet\",\"type\":\"address\"}],\"name\":\"changeMarketWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PulseUnity", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000b4000000000000000000000000000000000000000000000000000000000000000570000000000000000000000000265565615f51c42eccbac0f0c8dc67a9eced465000000000000000000000000028e3a04ea36aea6350e837981cdae4865924a300000000000000000000000000f04bd4f8d4d5988209aa7826f2d7d73728eb8b500000000000000000000000010552477af823ec90345902a9b78d4c06b3a077200000000000000000000000011fe0b74cbbfab00319394d3812709cec54d443200000000000000000000000012e5371d8eb8478089b472a01ec8d7d6ea3f76fc0000000000000000000000001536fff505b99e58166848634758d40b0241244100000000000000000000000018dd30083001010e304dfa495af46bd3960cbd9600000000000000000000000019d13b65cdb426f22f4333e2480f16aa44687fb40000000000000000000000001b2e9dd7dbaabb0631b82432abb8256be286b1470000000000000000000000001bf69f8b217580f26f5bbd48c0b8865aacebee1c0000000000000000000000001f10134737decdaf5eeccab2c032d4db2710dbf50000000000000000000000002000ac324d60fac113a7ffbc0f67af1d48fd393e00000000000000000000000021a31ee1afc51d94c2efccaa2092ad1028285549000000000000000000000000234b9697ed89f348535a11e1628becdb8a29eb3a000000000000000000000000289c13ae9e02cf1981ef507fa3a66979bf989f710000000000000000000000002b932de756b17ec75cc51bfa093a4a5ed76390010000000000000000000000002c5485a2e7acfefc48b2ce78b1de9326fa4013690000000000000000000000002cede8d1fa5e4e7f5a22a85e7fc7075ab4798b110000000000000000000000003197e105bac6735b2f593a265f6147f133ece25500000000000000000000000034358d27d9600a7263c05059bb5c3b396b062207000000000000000000000000349eb0bf535c0aafa71aee41b23f5f4987071c8200000000000000000000000037f60e5fd9788152000f3660db3559a16172648d0000000000000000000000003e79ecd1a92d29f8108adcef6e77d726d0e4e88000000000000000000000000041c1b48a5a88fca1e3c3263fc480ab8c73d4252f0000000000000000000000004448604d74757eadcecdfa7e34079dabe8ba4446000000000000000000000000455cd98d405432e5431a2faef1d3d14585c15700000000000000000000000000473e3d1eb3bea968cb1403bee77dd9230bf910c100000000000000000000000048e7344ecf7d1f9c4d5141f3f6b18910d3bc14100000000000000000000000004a51500fa149a20cdd4ba25a9d5329847489bb280000000000000000000000004e8d25d7b6a0ee67ccda7417eee8309ad27e5fd1000000000000000000000000543cb0157f517c39bde98d7f2965c37621c1cef70000000000000000000000005634699397964581a2af56aa712ad47c19ee99d600000000000000000000000056eddb7aa87536c09ccc2793473599fd21a8b17f00000000000000000000000064d671de7526dcc78dcc8e151f73656cabddc924000000000000000000000000654bc15a7160041f892c48818075b5900f7e3ce5000000000000000000000000656d8b74fd434d1f7fc2c2f0c225a0344991acba00000000000000000000000065d128e5777976005c7ae033341b29007293da410000000000000000000000006d81be9c4b86d115a30e44353b00d89923c38eb80000000000000000000000006ebf9581401ac6082d786e97e0f4d637eb48754200000000000000000000000072c899890ae8a177f17370509cf2a4384b7bf171000000000000000000000000754dd457b45d1040f9fe694800047502717e6e8700000000000000000000000078750084d10cfe3f4219557ad016f417224d4bbd0000000000000000000000007942a1536bca0e90f576a91eada00000683395bd0000000000000000000000007f59a1a0e39603773852e015aa6e598f61ba882f000000000000000000000000800b7efc9e42b7a9c2d602b9114a40b55be1057d0000000000000000000000008078ff64d60ecddfa285aa1d38980e265770837600000000000000000000000080e332a9271f3d194cebc4f358f1120848fdd48200000000000000000000000080ea0b4a6f946462c0f8c6baeeae352621fb7ea7000000000000000000000000846844d321c4f1c5ae785ebf8ad1445f44505d370000000000000000000000008a9ee06d70b3682e4190bf916ad7d6f7af870d920000000000000000000000008b018f6e1323e675433f348cf1dea620e0e3db000000000000000000000000008fac73dede4e2d892a3a55e58ec24650e0844bd700000000000000000000000090d9b9cc1bfb77d96f9a44731159ddbca824c63d000000000000000000000000950b11fb204c994265e66e7117f1c35d6e4c141c0000000000000000000000009c973ac5619934d353a316fab19f3847f3d4a8160000000000000000000000009ce43003f640afa5fd7dc79d2e222500d471c89e0000000000000000000000009ea9d6216924d2d76800ade7bb82dddd8adf40ce000000000000000000000000a11eb251a0c4b91d20acaae6a283a4f533a7097f000000000000000000000000a38be082b97ddf4f9ed7acb16f0ce90e9b4d280c000000000000000000000000a74a8f096f079aceeff473f0a2fa9497671d8adf000000000000000000000000af9eefdf361063301c58625387e88c3421dba49f000000000000000000000000b1b65110140712b6e0a60b3dbc5fbe6234f792e6000000000000000000000000ba3620b8a00e925154b45591577fe52fbcc514f5000000000000000000000000bb3c4bd899751cb9857738b7a4060008a26d825a000000000000000000000000bc8e8e75aa42284d9587160f8212852311bf917b000000000000000000000000bfba480e7bc362b4db88f9bbc8ee0903bf167d09000000000000000000000000c0d9f5648943ca8c92bb9d6c76ebb38aa14aca0d000000000000000000000000c4f80e8afe8fad71a1bf9a000c1bd0b6a15e9a18000000000000000000000000c5ffe724b728b6f62f7b6981f10f11150f041863000000000000000000000000c775d82fcf31e8d30ba2c4f3364d3ae0ab52c231000000000000000000000000c77ad8bb81affe1599d15286a2ad9fb1e352ee66000000000000000000000000cb2bc9c3843deed506c9bd2a4cf2bf1dceb1b29e000000000000000000000000cc00c90d604a09bf841bf8257fa6ddf1a126dd77000000000000000000000000cea6551346e00d9ad19e90f1a32b35aced1a136d000000000000000000000000d025a72fbdbacee266250a6451bbb9c768d0132d000000000000000000000000d596a800dcd5aba502240334723eb2f3b73272d0000000000000000000000000da2ffe2e4781f0f0191dc26fb79881b0bea66b63000000000000000000000000daf946e68b258fc8fc1cf46239a35c26ea22c8bd000000000000000000000000e203b86aed8af6c9877c37a88a4679d93d7bde1c000000000000000000000000eeff65fb20f94584c73604faec479da1032c89c3000000000000000000000000ef09d963806683d5b77b89aad838925af6f7446e000000000000000000000000f241d7306ac62dcc16eb1b04f05d745c71c791a1000000000000000000000000f375b64dbe6d465e467bd9b9be569f0b6c241e60000000000000000000000000f6518f8067ab387b142de811978d8ec1c1d0c198000000000000000000000000fd840d64e55b19d3faa153ccfd0095c9c62e7c4b000000000000000000000000fe2a08aa4573621159288f112cbe1b9db27d231b0000000000000000000000000000000000000000000000000000000000000057000000000000000000000000000000000000000000000000000000000000084100000000000000000000000000000000000000000000000000000000000050980000000000000000000000000000000000000000000000000000000000000f9e000000000000000000000000000000000000000000000000000000000000014f000000000000000000000000000000000000000000000000000000000000519c000000000000000000000000000000000000000000000000000000000000509700000000000000000000000000000000000000000000000000000000000b4bc400000000000000000000000000000000000000000000000000000000000002960000000000000000000000000000000000000000000000000000000000009c0e00000000000000000000000000000000000000000000000000000000000000ca000000000000000000000000000000000000000000000000000000000000041c0000000000000000000000000000000000000000000000000000000000011bcb00000000000000000000000000000000000000000000000000000000000214d60000000000000000000000000000000000000000000000000000000000048d7b0000000000000000000000000000000000000000000000000000000000001a64000000000000000000000000000000000000000000000000000000000000672a000000000000000000000000000000000000000000000000000000000000088f0000000000000000000000000000000000000000000000000000000000001da0000000000000000000000000000000000000000000000000000000000000257c00000000000000000000000000000000000000000000000000000000000017700000000000000000000000000000000000000000000000000000000000002c0a0000000000000000000000000000000000000000000000000000000000267dad000000000000000000000000000000000000000000000000000000000000144500000000000000000000000000000000000000000000000000000000000007d0000000000000000000000000000000000000000000000000000000000000340f0000000000000000000000000000000000000000000000000000000000004e000000000000000000000000000000000000000000000000000000000000009c3c0000000000000000000000000000000000000000000000000000000000001eb90000000000000000000000000000000000000000000000000000000000226b13000000000000000000000000000000000000000000000000000000000000652600000000000000000000000000000000000000000000000000000000000142ac0000000000000000000000000000000000000000000000000000000000004ba00000000000000000000000000000000000000000000000000000000000002711000000000000000000000000000000000000000000000000000000000000d9db0000000000000000000000000000000000000000000000000000000000000a770000000000000000000000000000000000000000000000000000000000004e1e00000000000000000000000000000000000000000000000000000000000006390000000000000000000000000000000000000000000000000000000000004ef8000000000000000000000000000000000000000000000000000000000000019200000000000000000000000000000000000000000000000000000000000007d000000000000000000000000000000000000000000000000000000000000156b8000000000000000000000000000000000000000000000000000000000000659000000000000000000000000000000000000000000000000000000000000074f7000000000000000000000000000000000000000000000000000000000007ee78000000000000000000000000000000000000000000000000000000000000139100000000000000000000000000000000000000000000000000000000000025970000000000000000000000000000000000000000000000000000000000001011000000000000000000000000000000000000000000000000000000000000926000000000000000000000000000000000000000000000000000000000000034fc00000000000000000000000000000000000000000000000000000000000007ca0000000000000000000000000000000000000000000000000000000000000fed00000000000000000000000000000000000000000000000000000000000125ae00000000000000000000000000000000000000000000000000000000000008930000000000000000000000000000000000000000000000000000000000030cbe00000000000000000000000000000000000000000000000000000000000000d700000000000000000000000000000000000000000000000000000000000003de000000000000000000000000000000000000000000000000000000000000f8ed000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000cf00000000000000000000000000000000000000000000000000000000000081fc00000000000000000000000000000000000000000000000000000000000027510000000000000000000000000000000000000000000000000000000000009e730000000000000000000000000000000000000000000000000000000000009fa400000000000000000000000000000000000000000000000000000000000263b50000000000000000000000000000000000000000000000000000000000004e20000000000000000000000000000000000000000000000000000000000009d9b000000000000000000000000000000000000000000000000000000000000195f200000000000000000000000000000000000000000000000000000000002774c300000000000000000000000000000000000000000000000000000000000000cf00000000000000000000000000000000000000000000000000000000000027080000000000000000000000000000000000000000000000000000000000001d1d0000000000000000000000000000000000000000000000000000000000004ee6000000000000000000000000000000000000000000000000000000000000115600000000000000000000000000000000000000000000000000000000000019040000000000000000000000000000000000000000000000000000000000000c8500000000000000000000000000000000000000000000000000000000002b490c0000000000000000000000000000000000000000000000000000000000002cec0000000000000000000000000000000000000000000000000000000000000f090000000000000000000000000000000000000000000000000000000000006c3c0000000000000000000000000000000000000000000000000000000000001d0c00000000000000000000000000000000000000000000000000000000000111070000000000000000000000000000000000000000000000000000000000001c38000000000000000000000000000000000000000000000000000000000006a102000000000000000000000000000000000000000000000000000000000000174000000000000000000000000000000000000000000000000000000000000050460000000000000000000000000000000000000000000000000000000000001cb6000000000000000000000000000000000000000000000000000000000000161d", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://bdecb04fd983890772160bdba6f70d9e1ee363afb6ee75e56fb5c9b0ad548c5c"}]}