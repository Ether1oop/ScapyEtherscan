{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/NiftyExchangeExecutor.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"./single/721/Single721.sol\\\";\\nimport \\\"./single/721/SingleHandler721.sol\\\";\\nimport \\\"./batch/721/Batch721.sol\\\";\\nimport \\\"./batch/721/BatchHandler721.sol\\\";\\nimport \\\"./single/1155/Single1155.sol\\\";\\nimport \\\"./single/1155/SingleHandler1155.sol\\\";\\nimport \\\"./batch/1155/Batch1155.sol\\\";\\nimport \\\"./batch/1155/BatchHandler1155.sol\\\";\\nimport \\\"./switcher/Switcher.sol\\\";\\nimport \\\"./switcher/SwitcherHandler.sol\\\";\\n\\n/**\\n * @notice We're hiring Solidity engineers! Let's get nifty!\\n *         https://www.gemini.com/careers/nifty-gateway\\n */\\ncontract NiftyExchangeExecutor is Single721, \\n                                  SingleHandler721, \\n                                  Batch721, \\n                                  BatchHandler721, \\n                                  Single1155, \\n                                  SingleHandler1155, \\n                                  Batch1155, \\n                                  BatchHandler1155,\\n                                  Switcher,\\n                                  SwitcherHandler {\\n\\n    constructor(address priceCurrencyUSD_, address recoveryAdmin_, address[] memory validSenders_) ExecutorCore(priceCurrencyUSD_, recoveryAdmin_, validSenders_) {\\n    }\\n\\n    function withdraw(address recipient, uint256 value) external {\\n        _requireOnlyValidSender();\\n        _transferEth(recipient, value);\\n    }\\n\\n    function withdraw20(address tokenContract, address recipient, uint256 amount) external {\\n        _requireOnlyValidSender();\\n        _transfer20(amount, tokenContract, recipient);\\n    }\\n\\n    function withdraw721(address tokenContract, address recipient, uint256 tokenId) external {\\n        _requireOnlyValidSender();\\n        IERC721(tokenContract).safeTransferFrom(address(this), recipient, tokenId);\\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/single/721/Single721.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"../../core/ExecutorCore.sol\\\";\\n\\n/**\\n *\\n */\\nabstract contract Single721 is ExecutorCore {\\n\\n    /**\\n     * 0\\n     */\\n    function recordSale721(\\n        uint256 tokenId,\\n        address tokenContract,\\n        uint256 price,\\n        address priceCurrency) external {\\n        _requireOnlyValidSender();\\n        _recordSale721(tokenContract, tokenId, price, priceCurrency);\\n    }\\n\\n    /**\\n     * #1\\n     */\\n    function executeSaleUsd721(\\n        uint256 tokenId,\\n        address tokenContract,\\n        uint256 price,\\n        address seller,\\n        address buyer) external {\\n        _requireOnlyValidSender();\\n        _transfer721(price, _priceCurrencyUSD, tokenId, tokenContract, seller, buyer);\\n    }\\n\\n    /**\\n     * #2\\n     */\\n    function executeSaleEth721(\\n        uint256 tokenId, \\n        address tokenContract,\\n        uint256 price, \\n        address seller,\\n        uint256 sellerProceeds,\\n        address buyer) external payable {\\n        _requireOnlyValidSender();\\n        _transfer721(price, _priceCurrencyETH, tokenId, tokenContract, seller, buyer);\\n        _transferEth(seller, sellerProceeds);\\n    }\\n\\n    /**\\n     * #3\\n     */\\n    function executeSaleToken721(\\n        uint256 tokenId, \\n        address tokenContract,\\n        uint256 price,\\n        address priceCurrency,\\n        address seller,\\n        uint256 sellerProceeds, \\n        address buyer) external {\\n        _requireOnlyValidSender();\\n        _transfer721(price, priceCurrency, tokenId, tokenContract, seller, buyer);\\n        _transfer20(sellerProceeds, priceCurrency, seller);\\n    }\\n\\n    /**\\n     * #4\\n     */\\n    function executeSaleReceiver1eth721(\\n        uint256 tokenId,\\n        address tokenContract,\\n        uint256 price,\\n        address seller,\\n        uint256 sellerProceeds,\\n        address buyer,\\n        address receiverCreator, \\n        uint256 receiverAmount) external payable {\\n        _requireOnlyValidSender();\\n        _transfer721(price, _priceCurrencyETH, tokenId, tokenContract, seller, buyer);\\n        _transferEth(seller, sellerProceeds); \\n        _transferEth(receiverCreator, receiverAmount); \\n    }\\n\\n    /**\\n     * #5\\n     */\\n    function executeSaleReceiver1token721(\\n        address receiverCreator, \\n        uint256 receiverAmount, \\n        address priceCurrency,\\n        NiftyEvent calldata ne) external {\\n        _requireOnlyValidSender();\\n        address seller = ne.seller;\\n        _transfer721(ne.price, priceCurrency, ne.tokenId, ne.tokenContract, seller, ne.buyer);\\n        _transfer20(ne.sellerProceeds, priceCurrency, seller);\\n        _transfer20(receiverAmount, priceCurrency, receiverCreator);\\n    }\\n\\n    /**\\n     * #6\\n     */\\n    function executeSaleReceiverNeth721(\\n        address[] calldata receiverCreators, \\n        uint256[] calldata receiverAmounts, \\n        NiftyEvent calldata ne) external payable {\\n        _requireOnlyValidSender();\\n        address seller = ne.seller;\\n        _transfer721(ne.price, _priceCurrencyETH, ne.tokenId, ne.tokenContract, seller, ne.buyer);\\n        _transferEth(seller, ne.sellerProceeds);\\n        for(uint256 i = 0; i < receiverCreators.length; i++){\\n            _transferEth(receiverCreators[i], receiverAmounts[i]);\\n        }\\n    }\\n\\n    /**\\n     * #7\\n     */\\n    function executeSaleReceiverNtoken721(\\n        address[] calldata receiverCreators,\\n        uint256[] calldata receiverAmounts,\\n        address priceCurrency,\\n        NiftyEvent calldata ne) external {\\n        _requireOnlyValidSender();\\n        address seller = ne.seller;\\n        _transfer721(ne.price, priceCurrency, ne.tokenId, ne.tokenContract, seller, ne.buyer);\\n        _transfer20(ne.sellerProceeds, priceCurrency, seller);\\n        for(uint256 i = 0; i < receiverCreators.length; i++){\\n            _transfer20(receiverAmounts[i], priceCurrency, receiverCreators[i]);\\n        }\\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/single/721/SingleHandler721.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"../../core/ExecutorCore.sol\\\";\\n\\n/**\\n *\\n */\\nabstract contract SingleHandler721 is ExecutorCore {    \\n\\n    /**\\n     * #2x\\n     */\\n    function executeSaleEth721handler(\\n        uint256 refund,\\n        uint256 price, \\n        uint256 sellerProceeds, \\n        uint256 tokenId, \\n        address tokenContract, \\n        address seller, \\n        address buyer) external payable {\\n        _requireOnlyValidSender();\\n        bool success = _transfer721handler(price, _priceCurrencyETH, tokenId, tokenContract, seller, buyer);\\n        if(success){\\n            _transferEth(seller, sellerProceeds);\\n        } else {\\n            _transferEth(buyer, refund);\\n        }\\n    }\\n\\n    /**\\n     * #3x\\n     */\\n    function executeSaleToken721handler(\\n        uint256 refund,\\n        uint256 price, \\n        uint256 sellerProceeds, \\n        address priceCurrency, \\n        uint256 tokenId, \\n        address tokenContract, \\n        address seller, \\n        address buyer) external {\\n        _requireOnlyValidSender();\\n        bool success = _transfer721handler(price, priceCurrency, tokenId, tokenContract, seller, buyer);\\n        if(success){\\n            _transfer20(sellerProceeds, priceCurrency, seller);\\n        } else {\\n            _transfer20(refund, priceCurrency, buyer);\\n        }\\n    }\\n\\n    /**\\n     * #4x\\n     */\\n    function executeSaleReceiver1eth721handler(\\n        uint256 refund,\\n        address receiverCreator, \\n        uint256 receiverAmount, \\n        uint256 price, \\n        uint256 sellerProceeds, \\n        uint256 tokenId, \\n        address tokenContract, \\n        address seller, \\n        address buyer) external payable {\\n        _requireOnlyValidSender();\\n        bool success = _transfer721handler(price, _priceCurrencyETH, tokenId, tokenContract, seller, buyer);\\n        if(success){\\n            _transferEth(seller, sellerProceeds);\\n            _transferEth(receiverCreator, receiverAmount);\\n        } else {\\n            _transferEth(buyer, refund);\\n        }\\n    }\\n\\n    /**\\n     * #5x\\n     */\\n    function executeSaleReceiver1token721handler(\\n        address receiverCreator, \\n        uint256 receiverAmount, \\n        address priceCurrency,\\n        NiftyEventHandler calldata ne) external {\\n        _requireOnlyValidSender();\\n        address seller = ne.seller;\\n        address buyer = ne.buyer;\\n        bool success = _transfer721handler(ne.price, priceCurrency, ne.tokenId, ne.tokenContract, seller, buyer);\\n        if(success){\\n            _transfer20(ne.sellerProceeds, priceCurrency, seller);\\n            _transfer20(receiverAmount, priceCurrency, receiverCreator);\\n        } else {\\n            _transfer20(ne.refund, priceCurrency, buyer);\\n        }\\n    }\\n\\n    /**\\n     * #6x\\n     */\\n    function executeSaleReceiverNeth721handler(\\n        address[] calldata receiverCreators, \\n        uint256[] calldata receiverAmounts, \\n        NiftyEventHandler calldata ne) external payable {\\n        _requireOnlyValidSender();\\n        address seller = ne.seller;\\n        address buyer = ne.buyer;\\n        bool success = _transfer721handler(ne.price, _priceCurrencyETH, ne.tokenId, ne.tokenContract, seller, buyer);\\n        if(success){\\n            _transferEth(seller, ne.sellerProceeds);\\n            for(uint256 i = 0; i < receiverCreators.length; i++){\\n                _transferEth(receiverCreators[i], receiverAmounts[i]);\\n            }\\n        } else {\\n            _transferEth(buyer, ne.refund);\\n        }\\n    }\\n\\n    /**\\n     * #7x\\n     */\\n    function executeSaleReceiverNtoken721handler(\\n        address[] calldata receiverCreators,\\n        uint256[] calldata receiverAmounts,\\n        address priceCurrency,\\n        NiftyEventHandler calldata ne) external {\\n        _requireOnlyValidSender();\\n        address seller = ne.seller;\\n        address buyer = ne.buyer;\\n        bool success = _transfer721handler(ne.price, priceCurrency, ne.tokenId, ne.tokenContract, seller, buyer);\\n        if(success){\\n            _transfer20(ne.sellerProceeds, priceCurrency, seller);\\n            for(uint256 i = 0; i < receiverCreators.length; i++){\\n                _transfer20(receiverAmounts[i], priceCurrency, receiverCreators[i]);\\n            }\\n        } else {\\n            _transfer20(ne.refund, priceCurrency, buyer);\\n        }\\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/batch/721/Batch721.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"../../core/ExecutorCore.sol\\\";\\n\\n/**\\n *\\n */\\nabstract contract Batch721 is ExecutorCore {    \\n\\n    /** \\n     * 0\\n     */\\n    function recordSale721batch(\\n        address[] calldata tokenContract, \\n        uint256[] calldata tokenId, \\n        uint256[] calldata price, \\n        address[] calldata priceCurrency) external {\\n        _requireOnlyValidSender();\\n        for (uint256 i = 0; i < tokenContract.length; i++) {\\n            _recordSale721(tokenContract[i], tokenId[i], price[i], priceCurrency[i]);\\n        }\\n    }\\n\\n    /** \\n     * 1 \\n     */\\n    function executeSaleUsd721batch(\\n        uint256[] calldata price, \\n        uint256[] calldata tokenId, \\n        address[] calldata tokenContract, \\n        address[] calldata seller, \\n        address[] calldata buyer) external {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < tokenContract.length; i++){\\n            _transfer721(price[i], _priceCurrencyUSD, tokenId[i], tokenContract[i], seller[i], buyer[i]);\\n        }\\n    }\\n\\n    /**\\n     * 2\\n     */\\n    function executeSaleEth721batch(\\n        uint256[] calldata price, \\n        uint256[] calldata sellerProceeds, \\n        uint256[] calldata tokenId, \\n        address[] calldata tokenContract, \\n        address[] calldata seller, \\n        address[] calldata buyer) external payable {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < tokenContract.length; i++){\\n            _transfer721(price[i], _priceCurrencyETH, tokenId[i], tokenContract[i], seller[i], buyer[i]);\\n            _transferEth(seller[i], sellerProceeds[i]);\\n        }    \\n    }\\n\\n    /** \\n     * 3\\n     */\\n    function executeSaleToken721batch( \\n        address[] calldata priceCurrency, \\n        NiftyEvent[] calldata ne) external {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){\\n            address seller = ne[i].seller;\\n            address currency = priceCurrency[i];\\n            _transfer721(ne[i].price, currency, ne[i].tokenId, ne[i].tokenContract, seller, ne[i].buyer);\\n            _transfer20(ne[i].sellerProceeds, currency, seller);\\n        } \\n    }\\n\\n    /** \\n     * 6\\n     */\\n    function executeSaleReceiverNeth721batch(\\n        address[][] calldata receiverCreators, \\n        uint256[][] calldata receiverAmounts, \\n        NiftyEvent[] calldata ne) external payable {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){            \\n            address seller = ne[i].seller;\\n            _transfer721(ne[i].price, _priceCurrencyETH, ne[i].tokenId, ne[i].tokenContract, seller, ne[i].buyer); \\n            _transferEth(seller, ne[i].sellerProceeds);\\n            for(uint256 j = 0; j < receiverCreators[i].length; j++){\\n                _transferEth(receiverCreators[i][j], receiverAmounts[i][j]);\\n            }\\n        } \\n    }\\n\\n    /**\\n     * 7\\n     */\\n    function executeSaleReceiverNtoken721batch(NiftyEventReceiver[] calldata ne) external {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){            \\n            address seller = ne[i].seller;\\n            address currency = ne[i].priceCurrency;\\n            _transfer721(ne[i].price, currency, ne[i].tokenId, ne[i].tokenContract, seller, ne[i].buyer); \\n            _transfer20(ne[i].sellerProceeds, currency, seller);\\n            for(uint256 j = 0; j < ne[i].receiverCreators.length; j++){\\n                _transfer20(ne[i].receiverAmounts[j], currency, ne[i].receiverCreators[j]);\\n            }\\n        } \\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/batch/721/BatchHandler721.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"../../core/ExecutorCore.sol\\\";\\n\\n/**\\n *\\n */\\nabstract contract BatchHandler721 is ExecutorCore {\\n\\n    /**\\n     * 2\\n     */\\n    function executeSaleEth721batchHandler(NiftyEventHandler[] calldata ne) external payable {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){\\n            address seller = ne[i].seller;\\n            address buyer = ne[i].buyer;\\n            bool success = _transfer721handler(ne[i].price, _priceCurrencyETH, ne[i].tokenId, ne[i].tokenContract, seller, buyer);\\n            if(success){\\n                _transferEth(seller, ne[i].sellerProceeds);\\n            } else {\\n                _transferEth(buyer, ne[i].refund);\\n            }\\n        } \\n    }\\n\\n    /** \\n     * 3\\n     */\\n    function executeSaleToken721batchHandler( \\n        address[] calldata priceCurrency, \\n        NiftyEventHandler[] calldata ne) external {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){    \\n            address seller = ne[i].seller;\\n            address buyer = ne[i].buyer;\\n            address currency = priceCurrency[i];\\n            bool success = _transfer721handler(ne[i].price, currency, ne[i].tokenId, ne[i].tokenContract, seller, buyer);\\n            if(success){\\n                _transfer20(ne[i].sellerProceeds, currency, seller);\\n            } else {\\n                _transfer20(ne[i].refund, currency, buyer);\\n            }\\n        } \\n    }\\n\\n    /**\\n     * 6\\n     */\\n    function executeSaleReceiverNeth721batchHandler(\\n        address[][] calldata receiverCreators, \\n        uint256[][] calldata receiverAmounts, \\n        NiftyEventHandler[] calldata ne) external payable {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){\\n            address seller = ne[i].seller;\\n            address buyer = ne[i].buyer;\\n            bool success = _transfer721handler(ne[i].price, _priceCurrencyETH, ne[i].tokenId, ne[i].tokenContract, seller, buyer);\\n            if(success){\\n                _transferEth(seller, ne[i].sellerProceeds);\\n                for(uint256 j = 0; j < receiverCreators[i].length; j++){\\n                    _transferEth(receiverCreators[i][j], receiverAmounts[i][j]);\\n                }\\n            } else {\\n                _transferEth(buyer, ne[i].refund);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * 7\\n     */\\n    function executeSaleReceiverNtoken721batchHandler(NiftyEventReceiverHandler[] calldata ne) external {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){            \\n            address seller = ne[i].seller;\\n            address currency = ne[i].priceCurrency;\\n            address buyer = ne[i].buyer;\\n            bool success = _transfer721handler(ne[i].price, currency, ne[i].tokenId, ne[i].tokenContract, seller, buyer);\\n            if(success){\\n                _transfer20(ne[i].sellerProceeds, currency, seller);\\n                for(uint256 j = 0; j < ne[i].receiverCreators.length; j++){\\n                    _transfer20(ne[i].receiverAmounts[j], currency, ne[i].receiverCreators[j]);\\n                }\\n            } else {\\n                _transfer20(ne[i].refund, currency, buyer);\\n            }\\n        }\\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/single/1155/Single1155.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"../../core/ExecutorCore.sol\\\";\\n\\n/**\\n *\\n */\\nabstract contract Single1155 is ExecutorCore {\\n    \\n    /**\\n     * #0.5\\n     */\\n    function recordSale1155(address tokenContract, uint256 tokenId, uint256 count, uint256 price, address priceCurrency) external {\\n        _requireOnlyValidSender();\\n        _recordSale1155(tokenContract, tokenId, count, price, priceCurrency);\\n    }\\n\\n    /**\\n     * #1.5\\n     */\\n    function executeSaleUsd1155(\\n        uint256 count,\\n        uint256 price,\\n        uint256 tokenId, \\n        address tokenContract, \\n        address seller, \\n        address buyer) external {\\n        _requireOnlyValidSender();\\n        _transfer1155(count, price, _priceCurrencyUSD, tokenId, tokenContract, seller, buyer);\\n    }\\n\\n    /**\\n     * #2.5\\n     */\\n    function executeSaleEth1155(\\n        uint256 count, \\n        uint256 price, \\n        uint256 sellerProceeds, \\n        uint256 tokenId, \\n        address tokenContract, \\n        address seller, \\n        address buyer) external payable {\\n        _requireOnlyValidSender();\\n        _transfer1155(count, price, _priceCurrencyETH, tokenId, tokenContract, seller, buyer);\\n        _transferEth(seller, sellerProceeds);   \\n    }\\n\\n    /**\\n     * #3.5\\n     */\\n    function executeSaleToken1155(\\n        uint256 count, \\n        uint256 price, \\n        uint256 sellerProceeds, \\n        address priceCurrency, \\n        uint256 tokenId, \\n        address tokenContract, \\n        address seller, \\n        address buyer) external {\\n        _requireOnlyValidSender();\\n        _transfer1155(count, price, priceCurrency, tokenId, tokenContract, seller, buyer);\\n        _transfer20(sellerProceeds, priceCurrency, seller);\\n    }\\n\\n    /**\\n     * #4.5\\n     */\\n    function executeSaleReceiver1eth1155(\\n        uint256 count, \\n        address receiverCreator, \\n        uint256 receiverAmount, \\n        uint256 price, \\n        uint256 sellerProceeds, \\n        uint256 tokenId, \\n        address tokenContract, \\n        address seller, \\n        address buyer) external payable {\\n        _requireOnlyValidSender();\\n        _transfer1155(count, price, _priceCurrencyETH, tokenId, tokenContract, seller, buyer);\\n        _transferEth(seller, sellerProceeds); \\n        _transferEth(receiverCreator, receiverAmount); \\n    }\\n\\n    /**\\n     * #5.5\\n     */\\n    function executeSaleReceiver1token1155(\\n        uint256 count,\\n        address receiverCreator, \\n        uint256 receiverAmount, \\n        address priceCurrency, \\n        NiftyEvent calldata ne) external {\\n        _requireOnlyValidSender();\\n        address seller = ne.seller;\\n        _transfer1155(count, ne.price, priceCurrency, ne.tokenId, ne.tokenContract, seller, ne.buyer);\\n        _transfer20(ne.sellerProceeds, priceCurrency, seller);\\n        _transfer20(receiverAmount, priceCurrency, receiverCreator);\\n    }\\n\\n    /**\\n     * #6.5\\n     */\\n    function executeSaleReceiverNeth1155(\\n        uint256 count,\\n        address[] calldata receiverCreators, \\n        uint256[] calldata receiverAmounts, \\n        NiftyEvent calldata ne) external payable {\\n        _requireOnlyValidSender();\\n        address seller = ne.seller;\\n        _transfer1155(count, ne.price, _priceCurrencyETH, ne.tokenId, ne.tokenContract, seller, ne.buyer);\\n        _transferEth(seller, ne.sellerProceeds);\\n        for(uint256 i = 0; i < receiverCreators.length; i++){\\n            _transferEth(receiverCreators[i], receiverAmounts[i]);\\n        }\\n    }\\n\\n    /**\\n     * #7.5\\n     */\\n    function executeSaleReceiverNtoken1155(\\n        uint256 count, \\n        address[] calldata receiverCreators,\\n        uint256[] calldata receiverAmounts,\\n        address priceCurrency,\\n        NiftyEvent calldata ne) external {\\n        _requireOnlyValidSender();\\n        address seller = ne.seller;\\n        _transfer1155(count, ne.price, priceCurrency, ne.tokenId, ne.tokenContract, seller, ne.buyer);\\n        _transfer20(ne.sellerProceeds, priceCurrency, seller);\\n        for(uint256 i = 0; i < receiverCreators.length; i++){\\n            _transfer20(receiverAmounts[i], priceCurrency, receiverCreators[i]);\\n        }\\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/single/1155/SingleHandler1155.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"../../core/ExecutorCore.sol\\\";\\n\\n/**\\n *\\n */\\nabstract contract SingleHandler1155 is ExecutorCore {\\n    \\n    /**\\n     * #2.5x\\n     */\\n    function executeSaleEth1155handler(\\n        uint256 count,\\n        uint256 refund,\\n        uint256 price, \\n        uint256 sellerProceeds, \\n        uint256 tokenId, \\n        address tokenContract, \\n        address seller, \\n        address buyer) external payable {\\n        _requireOnlyValidSender();\\n        bool success = _transfer1155handler(count, price, _priceCurrencyETH, tokenId, tokenContract, seller, buyer);\\n        if(success){\\n            _transferEth(seller, sellerProceeds);\\n        } else {\\n            _transferEth(buyer, refund);\\n        } \\n    }\\n\\n    /**\\n     * #3.5x\\n     */\\n    function executeSaleToken1155handler(\\n        uint256 count,\\n        uint256 refund,\\n        uint256 price, \\n        uint256 sellerProceeds, \\n        address priceCurrency, \\n        uint256 tokenId, \\n        address tokenContract, \\n        address seller, \\n        address buyer) external {\\n        _requireOnlyValidSender();\\n        bool success = _transfer1155handler(count, price, priceCurrency, tokenId, tokenContract, seller, buyer);\\n        if(success){\\n            _transfer20(sellerProceeds, priceCurrency, seller);\\n        } else {\\n            _transfer20(refund, priceCurrency, buyer);\\n        }\\n    }\\n\\n    /**\\n     * #4.5x\\n     */\\n    function executeSaleReceiver1eth1155handler(\\n        uint256 count,\\n        uint256 refund,\\n        address receiverCreator, \\n        uint256 receiverAmount, \\n        uint256 price, \\n        uint256 sellerProceeds, \\n        uint256 tokenId, \\n        address tokenContract, \\n        address seller, \\n        address buyer) external payable {\\n        _requireOnlyValidSender();\\n        bool success = _transfer1155handler(count, price, _priceCurrencyETH, tokenId, tokenContract, seller, buyer);\\n        if(success){\\n            _transferEth(seller, sellerProceeds);\\n            _transferEth(receiverCreator, receiverAmount);\\n        } else {\\n            _transferEth(buyer, refund);\\n        }\\n    }\\n\\n    /**\\n     * #5.5x\\n     */\\n    function executeSaleReceiver1token1155handler(\\n        uint256 count,\\n        address receiverCreator, \\n        uint256 receiverAmount, \\n        address priceCurrency, \\n        NiftyEventHandler calldata ne) external {\\n        _requireOnlyValidSender();\\n        address seller = ne.seller;\\n        address buyer = ne.buyer;\\n        bool success = _transfer1155handler(count, ne.price, priceCurrency, ne.tokenId, ne.tokenContract, seller, ne.buyer);\\n        if(success){\\n            _transfer20(ne.sellerProceeds, priceCurrency, seller);\\n            _transfer20(receiverAmount, priceCurrency, receiverCreator);\\n        } else {\\n            _transfer20(ne.refund, priceCurrency, buyer);\\n        }\\n    }\\n\\n    /**\\n     * #6.5x\\n     */\\n    function executeSaleReceiverNeth1155handler(\\n        uint256 count,\\n        address[] calldata receiverCreators, \\n        uint256[] calldata receiverAmounts, \\n        NiftyEventHandler calldata ne) external payable {\\n        _requireOnlyValidSender();\\n        address seller = ne.seller;\\n        address buyer = ne.buyer;\\n        bool success = _transfer1155handler(count, ne.price, _priceCurrencyETH, ne.tokenId, ne.tokenContract, seller, ne.buyer);\\n        if(success){\\n            _transferEth(seller, ne.sellerProceeds);\\n            for(uint256 i = 0; i < receiverCreators.length; i++){\\n                _transferEth(receiverCreators[i], receiverAmounts[i]);\\n            }\\n        } else {\\n            _transferEth(buyer, ne.refund);\\n        }\\n    }\\n\\n    /**\\n     * #7.5x\\n     */\\n    function executeSaleReceiverNtoken1155handler(\\n        uint256 count,\\n        address[] calldata receiverCreators,\\n        uint256[] calldata receiverAmounts,\\n        address priceCurrency,\\n        NiftyEventHandler calldata ne) external {\\n        _requireOnlyValidSender();\\n        address seller = ne.seller;\\n        address buyer = ne.buyer;\\n        bool success = _transfer1155handler(count, ne.price, priceCurrency, ne.tokenId, ne.tokenContract, seller, buyer);\\n        if(success){\\n            _transfer20(ne.sellerProceeds, priceCurrency, seller);\\n            for(uint256 i = 0; i < receiverCreators.length; i++){\\n                _transfer20(receiverAmounts[i], priceCurrency, receiverCreators[i]);\\n            }\\n        } else {\\n            _transfer20(ne.refund, priceCurrency, buyer);\\n        }\\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/batch/1155/Batch1155.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"../../core/ExecutorCore.sol\\\";\\n\\n/**\\n *\\n */\\nabstract contract Batch1155 is ExecutorCore {    \\n\\n    /** \\n     * 0.5\\n     */\\n    function recordSale1155batch(\\n        uint256[] calldata count, \\n        address[] calldata tokenContract, \\n        uint256[] calldata tokenId,\\n        uint256[] calldata price, \\n        address[] calldata priceCurrency) external {\\n        _requireOnlyValidSender();\\n        for (uint256 i = 0; i < tokenContract.length; i++) {\\n            _recordSale1155(tokenContract[i], tokenId[i], count[i], price[i], priceCurrency[i]);\\n        }\\n    }\\n\\n    /** \\n     * 1.5\\n     */\\n    function executeSaleUsd1155batch(\\n        uint256[] calldata count,\\n        uint256[] calldata price,\\n        uint256[] calldata tokenId, \\n        address[] calldata tokenContract, \\n        address[] calldata seller, \\n        address[] calldata buyer) external {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < tokenContract.length; i++){\\n            _transfer1155(count[i], price[i], _priceCurrencyUSD, tokenId[i], tokenContract[i], seller[i], buyer[i]);\\n        }\\n    }\\n\\n    /** \\n     * 2.5\\n     */\\n    function executeSaleEth1155batch(\\n        uint256[] calldata count,\\n        NiftyEvent[] calldata ne) external payable {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){\\n            _transfer1155(count[i], ne[i].price, _priceCurrencyETH, ne[i].tokenId, ne[i].tokenContract, ne[i].seller, ne[i].buyer);\\n            _transferEth(ne[i].seller, ne[i].sellerProceeds);\\n        }  \\n    }\\n\\n    /** \\n     * 3.5\\n     */\\n    function executeSaleToken1155batch(\\n        uint256[] calldata count, \\n        address[] calldata priceCurrency, \\n        NiftyEvent[] calldata ne) external {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){\\n            address seller = ne[i].seller;\\n            address currency = priceCurrency[i];\\n            _transfer1155(count[i], ne[i].price, currency, ne[i].tokenId, ne[i].tokenContract, seller, ne[i].buyer);\\n            _transfer20(ne[i].sellerProceeds, currency, seller);\\n        } \\n    }\\n\\n    /** \\n     * 6.5\\n     */\\n    function executeSaleReceiverNeth1155batch(\\n        uint256[] calldata count,\\n        address[][] calldata receiverCreators, \\n        uint256[][] calldata receiverAmounts,  \\n        NiftyEvent[] calldata ne) external payable {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){            \\n            address seller = ne[i].seller;\\n            _transfer1155(count[i], ne[i].price, _priceCurrencyETH, ne[i].tokenId, ne[i].tokenContract, seller, ne[i].buyer);\\n            _transferEth(seller, ne[i].sellerProceeds);\\n            for(uint256 j = 0; j < receiverCreators[i].length; j++){\\n                _transferEth(receiverCreators[i][j], receiverAmounts[i][j]);\\n            }\\n        } \\n    }\\n\\n    /** \\n     * 7.5\\n     */\\n    function executeSaleReceiverNtoken1155batch(uint256[] calldata count, NiftyEventReceiver[] calldata ne) external {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){            \\n            address seller = ne[i].seller;\\n            address currency = ne[i].priceCurrency;\\n            _transfer1155(count[i], ne[i].price, currency, ne[i].tokenId, ne[i].tokenContract, seller, ne[i].buyer);\\n            _transfer20(ne[i].sellerProceeds, currency, seller);\\n            for(uint256 j = 0; j < ne[i].receiverCreators.length; j++){\\n                _transfer20(ne[i].receiverAmounts[j], currency, ne[i].receiverCreators[j]);\\n            }\\n        } \\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/batch/1155/BatchHandler1155.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"../../core/ExecutorCore.sol\\\";\\n\\n/**\\n *\\n */\\nabstract contract BatchHandler1155 is ExecutorCore {\\n\\n    /**\\n     * 2.5x\\n     */\\n    function executeSaleEth1155batchHandler(\\n        uint256[] calldata count,\\n        NiftyEventHandler[] calldata ne) external payable {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){\\n            address seller = ne[i].seller;\\n            address buyer = ne[i].buyer;\\n            bool success = _transfer1155handler(count[i], ne[i].price, _priceCurrencyETH, ne[i].tokenId, ne[i].tokenContract, seller, buyer);\\n            if(success){\\n                _transferEth(seller, ne[i].sellerProceeds);\\n            } else {\\n                _transferEth(buyer, ne[i].refund);\\n            } \\n        } \\n    }\\n\\n    /**\\n     * 3.5x\\n     */\\n    function executeSaleToken1155batchHandler(\\n        uint256[] calldata count, \\n        address[] calldata priceCurrency, \\n        NiftyEventHandler[] calldata ne) external {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){    \\n            address seller = ne[i].seller;\\n            address buyer = ne[i].buyer;\\n            address currency = priceCurrency[i];\\n            bool success = _transfer1155handler(count[i], ne[i].price, currency, ne[i].tokenId, ne[i].tokenContract, seller, buyer);\\n            if(success){\\n                _transfer20(ne[i].sellerProceeds, currency, seller);\\n            } else {\\n                _transfer20(ne[i].refund, currency, buyer);\\n            }\\n        } \\n    }\\n\\n    /**\\n     * 6.5x\\n     */\\n    function executeSaleReceiverNeth1155batchHandler(\\n        uint256[] calldata count,\\n        address[][] calldata receiverCreators, \\n        uint256[][] calldata receiverAmounts,  \\n        NiftyEventHandler[] calldata ne) external payable {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){\\n            address seller = ne[i].seller;\\n            address buyer = ne[i].buyer;\\n            bool success = _transfer1155handler(count[i], ne[i].price, _priceCurrencyETH, ne[i].tokenId, ne[i].tokenContract, seller, buyer);\\n            if(success){\\n                _transferEth(seller, ne[i].sellerProceeds);\\n                for(uint256 j = 0; j < receiverCreators[i].length; j++){\\n                    _transferEth(receiverCreators[i][j], receiverAmounts[i][j]);\\n                }\\n            } else {\\n                _transferEth(buyer, ne[i].refund);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * 7.5x\\n     */\\n    function executeSaleReceiverNtoken1155batchHandler(uint256[] calldata count, NiftyEventReceiverHandler[] calldata ne) external {\\n        _requireOnlyValidSender();\\n        for(uint256 i = 0; i < ne.length; i++){            \\n            address seller = ne[i].seller;\\n            address currency = ne[i].priceCurrency;\\n            address buyer = ne[i].buyer;\\n            bool success = _transfer1155handler(count[i], ne[i].price, currency, ne[i].tokenId, ne[i].tokenContract, seller, buyer);\\n            if(success){\\n                _transfer20(ne[i].sellerProceeds, currency, seller);\\n                for(uint256 j = 0; j < ne[i].receiverCreators.length; j++){\\n                    _transfer20(ne[i].receiverAmounts[j], currency, ne[i].receiverCreators[j]);\\n                }\\n            } else {\\n                _transfer20(ne[i].refund, currency, buyer);\\n            }\\n        }\\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/switcher/Switcher.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"../core/ExecutorCore.sol\\\";\\n\\n/**\\n * 721/1155, ETH/USD/ERC-20, & 0/1/N Receivers, w/o refund \\n */\\nabstract contract Switcher is ExecutorCore {\\n\\n    /**\\n     * @dev Takes as input an array of generalized objects, consisting of \\n     * sale events that include tokens of type ERC-721, and ERC-1155. The\\n     * payment may have been made in ETH, USD, or an ERC-20 token. The number\\n     * of royalty receivers can be either 0, 1 or N.  \\n     */\\n    function executeSaleBatch(NiftyEventBatch[] calldata ne) external payable {\\n        _requireOnlyValidSender();  \\n        for (uint256 i = 0; i < ne.length; i++) {\\n            address currency = ne[i].priceCurrency; \\n            uint256 sellerProceeds = ne[i].sellerProceeds;\\n            address seller = ne[i].seller; \\n            if(ne[i].count == 0) {\\n                _transfer721(ne[i].price, currency, ne[i].tokenId, ne[i].tokenContract, seller, ne[i].buyer);\\n            } else {\\n                _transfer1155(ne[i].count, ne[i].price, currency, ne[i].tokenId, ne[i].tokenContract, seller, ne[i].buyer);\\n            }\\n            _executeSwitcher(currency, sellerProceeds, seller, ne[i].receiverCreators, ne[i].receiverAmounts);\\n        }\\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/switcher/SwitcherHandler.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"../core/ExecutorCore.sol\\\";\\n\\n/**\\n * 721/1155, ETH/USD/ERC-20, & 0/1/N Receivers, w/ refund \\n */\\nabstract contract SwitcherHandler is ExecutorCore {\\n\\n    /**\\n     * @dev Takes as input an array of generalized objects, consisting of \\n     * sale events that include tokens of type ERC-721, and ERC-1155. The\\n     * payment may have been made in ETH, USD, or an ERC-20 token. The number\\n     * of royalty receivers can be either 0, 1 or N.\\n     * \\n     * @notice In the event the transfer is unsuccessful, the function will \\n     * issue a refund to the buyer in the amount specified by the input 'refund'\\n     * parameter.  \\n     */\\n    function executeSaleBatchHandler(uint256[] calldata refund, NiftyEventBatch[] calldata ne) external payable {\\n        _requireOnlyValidSender();  \\n        for (uint256 i = 0; i < ne.length; i++) {\\n            address currency = ne[i].priceCurrency; \\n            uint256 sellerProceeds = ne[i].sellerProceeds;\\n            address seller = ne[i].seller; \\n            address buyer = ne[i].buyer; \\n            if(ne[i].count == 0) {\\n                bool success = _transfer721handler(ne[i].price, currency, ne[i].tokenId, ne[i].tokenContract, seller, buyer);\\n                if(success){\\n                    _executeSwitcher(currency, sellerProceeds, seller, ne[i].receiverCreators, ne[i].receiverAmounts);\\n                } else {\\n                    _executeRefund(refund[i], currency, buyer);\\n                }\\n            } else {\\n                bool success = _transfer1155handler(ne[i].count, ne[i].price, currency, ne[i].tokenId, ne[i].tokenContract, seller, buyer);\\n                if(success){\\n                    _executeSwitcher(currency, sellerProceeds, seller, ne[i].receiverCreators, ne[i].receiverAmounts);\\n                } else {\\n                    _executeRefund(refund[i], currency, buyer);\\n                }\\n            }\\n        }\\n    }\\n}\"\r\n    },\r\n    \"contracts/core/ExecutorCore.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"../registry/Registry.sol\\\";\\n\\ninterface IERC1155 {\\n    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external;\\n}\\n\\ninterface IERC721 {\\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\\n}\\n\\nstruct NiftyEvent {\\n    uint256 sellerProceeds;\\n    uint256 price;\\n    uint256 tokenId; \\n    address tokenContract; \\n    address seller;\\n    address buyer;\\n}\\n\\nstruct NiftyEventHandler {\\n    uint256 refund; ///\\n    uint256 sellerProceeds;\\n    uint256 price;\\n    uint256 tokenId; \\n    address tokenContract; \\n    address seller;\\n    address buyer;\\n}\\n\\nstruct NiftyEventReceiver {\\n    uint256 sellerProceeds;\\n    uint256 price;\\n    uint256 tokenId;\\n    address tokenContract;\\n    address seller;\\n    address buyer;\\n    address priceCurrency;\\n    address[] receiverCreators;\\n    uint256[] receiverAmounts;\\n}\\n\\nstruct NiftyEventReceiverHandler {\\n    uint256 refund; ///\\n    uint256 sellerProceeds;\\n    uint256 price;\\n    uint256 tokenId;\\n    address tokenContract;\\n    address seller;\\n    address buyer;\\n    address priceCurrency;\\n    address[] receiverCreators;\\n    uint256[] receiverAmounts;\\n}\\n\\nstruct NiftyEventBatch {\\n    uint256 tokenId;\\n    uint256 count; /// @notice Value of '0' indicates ERC-721 token\\n    uint256 sellerProceeds; /// @notice Amount remitted to seller\\n    uint256 price;\\n    address priceCurrency; /// @notice Settlement currency (USD, ETH, ERC-20)\\n    address tokenContract;\\n    address seller;\\n    address buyer;\\n    address[] receiverCreators;\\n    uint256[] receiverAmounts;\\n}\\n\\n/**\\n *\\n */\\nabstract contract ExecutorCore is Registry {\\n\\n    address constant public _priceCurrencyETH = address(0);\\n\\n    address immutable public _priceCurrencyUSD;\\n\\n    event NiftySale721(address indexed tokenContract, uint256 tokenId, uint256 price, address priceCurrency);\\n\\n    event NiftySale1155(address indexed tokenContract, uint256 tokenId, uint256 count, uint256 price, address priceCurrency);\\n\\n    constructor(address priceCurrencyUSD_, address recoveryAdmin_, address[] memory validSenders_) Registry(recoveryAdmin_, validSenders_) {\\n        _priceCurrencyUSD = priceCurrencyUSD_;\\n    }\\n\\n    /**\\n     *\\n     */\\n    function _transferEth(address recipient, uint256 value) internal {\\n        (bool success,) = payable(recipient).call{value: value}(\\\"\\\");\\n        require(success, \\\"NiftyExchangeExecutor: Value transfer unsuccessful\\\");\\n    }\\n\\n    function _transfer20(uint256 value, address token, address to) internal {\\n        (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))));\\n    }\\n\\n    function _transfer721(uint256 price, address priceCurrency, uint256 tokenId, address tokenContract, address seller, address buyer) internal {\\n        IERC721(tokenContract).safeTransferFrom(seller, buyer, tokenId);\\n        emit NiftySale721(tokenContract, tokenId, price, priceCurrency);\\n    }\\n\\n    function _transfer721handler(uint256 price, address priceCurrency, uint256 tokenId, address tokenContract, address seller, address buyer) internal returns (bool) {\\n        try IERC721(tokenContract).safeTransferFrom(seller, buyer, tokenId) {\\n            emit NiftySale721(tokenContract, tokenId, price, priceCurrency);\\n            return true;\\n        } catch {\\n            return false;\\n        }\\n    }\\n\\n    function _transfer1155(uint256 count, uint256 price, address priceCurrency, uint256 tokenId, address tokenContract, address seller, address buyer) internal {\\n        IERC1155(tokenContract).safeTransferFrom(seller, buyer, tokenId, count, \\\"\\\");\\n        emit NiftySale1155(tokenContract, tokenId, count, price, priceCurrency); /// @notice 'price' describes entire purchase.\\n    }\\n\\n    function _transfer1155handler(uint256 count, uint256 price, address priceCurrency, uint256 tokenId, address tokenContract, address seller, address buyer) internal returns (bool) {\\n        try IERC1155(tokenContract).safeTransferFrom(seller, buyer, tokenId, count, \\\"\\\") {\\n            emit NiftySale1155(tokenContract, tokenId, count, price, priceCurrency);\\n            return true;\\n        } catch {\\n            return false;\\n        }\\n    }\\n\\n    function _recordSale721(address tokenContract, uint256 tokenId, uint256 price, address priceCurrency) internal {\\n        emit NiftySale721(tokenContract, tokenId, price, priceCurrency);\\n    }\\n\\n    function _recordSale1155(address tokenContract, uint256 tokenId, uint256 count, uint256 price, address priceCurrency) internal {\\n        emit NiftySale1155(tokenContract, tokenId, count, price, priceCurrency);\\n    }\\n\\n    function _executeSwitcher(\\n        address currency, \\n        uint256 sellerProceeds, \\n        address seller, \\n        address[] calldata receiverCreators, \\n        uint256[] calldata receiverAmounts) internal {\\n        bool eth = currency == _priceCurrencyETH;\\n        if(sellerProceeds > 0){\\n            if(eth){\\n                _transferEth(seller, sellerProceeds);\\n            } else {\\n                _transfer20(sellerProceeds, currency, seller);\\n            }\\n        }\\n        uint256 receiverCount = receiverCreators.length;\\n        if(receiverCount > 0){\\n            for(uint256 i = 0; i < receiverCount; i++){\\n                if(eth){\\n                    _transferEth(receiverCreators[i], receiverAmounts[i]);\\n                } else {\\n                    _transfer20(receiverAmounts[i], currency, receiverCreators[i]);\\n                }\\n            }\\n        }\\n    }\\n\\n    function _executeRefund(uint256 refund, address currency, address buyer) internal {\\n        if(refund > 0){\\n            if(currency == _priceCurrencyETH) {\\n                _transferEth(buyer, refund);\\n            } else {\\n                _transfer20(refund, currency, buyer);\\n            }\\n        }\\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/registry/Registry.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\nimport \\\"./LockRequestable.sol\\\";\\n\\nstruct AdminUpdateRequest {\\n    address proposed;\\n}\\n\\ncontract Registry is LockRequestable {\\n\\n    address public custodian;\\n\\n    mapping(bytes32 => AdminUpdateRequest) public custodianChangeReqs;\\n\\n    event CustodianChangeRequested(\\n        bytes32 _lockId,\\n        address _msgSender,\\n        address _proposedCustodian,\\n        uint256 _lockRequestIdx\\n    );\\n    event CustodianChangeConfirmed(bytes32 _lockId, address _newCustodian);\\n\\n    mapping(address => address) public _validSenderSet;\\n    uint256 public setSize;\\n    address constant GUARD = address(1);\\n\\n    mapping(bytes32 => AdminUpdateRequest) public ownerAddReqs;\\n\\n    event ValidSenderAddRequested(\\n        bytes32 _lockId,\\n        address _msgSender,\\n        address _proposed,\\n        uint256 _lockRequestIdx\\n    );\\n    event ValidSenderAddConfirmed(bytes32 _lockId, address _newValidSender);\\n    \\n    string internal constant ERROR_INVALID_MSG_SENDER = \\\"Invalid msg.sender\\\";\\n\\n    constructor(address custodian_, address[] memory validSenders_) LockRequestable() {\\n        custodian = custodian_;\\n        _validSenderSet[GUARD] = GUARD;\\n        for(uint256 i = 0; i < validSenders_.length; i++) {\\n            address sender = validSenders_[i];\\n            _addValidSender(sender);\\n        }\\n    }\\n\\n    modifier onlyCustodian {\\n        require(msg.sender == custodian, ERROR_INVALID_MSG_SENDER);\\n        _;\\n    }\\n\\n    function _requireOnlyValidSender() internal view {       \\n        require(isValidSender(msg.sender), ERROR_INVALID_MSG_SENDER);\\n    }\\n\\n    function confirmCustodianChange(bytes32 lockId) external onlyCustodian {\\n        custodian = _getRequest(custodianChangeReqs, lockId);\\n        delete custodianChangeReqs[lockId];\\n        emit CustodianChangeConfirmed(lockId, custodian);\\n    }\\n\\n    function confirmValidSenderAdd(bytes32 lockId) external onlyCustodian {\\n        address proposed = _getRequest(ownerAddReqs, lockId);\\n        _addValidSender(proposed);\\n        delete ownerAddReqs[lockId];\\n        emit ValidSenderAddConfirmed(lockId, proposed);\\n    }\\n\\n    function _getRequest(mapping(bytes32 => AdminUpdateRequest) storage _m, bytes32 _lockId) private view returns (address proposed) {\\n        AdminUpdateRequest storage adminRequest = _m[_lockId];\\n        // reject \u2018null\u2019 results from the map lookup\\n        // this can only be the case if an unknown `_lockId` is received\\n        require(adminRequest.proposed != address(0), \\\"no such lockId\\\");\\n        return adminRequest.proposed;\\n    }\\n\\n    function _requestChange(mapping(bytes32 => AdminUpdateRequest) storage _m, bytes4 _selector, address _proposed) private returns (bytes32 lockId, uint256 lockRequestIdx) {\\n        require(_proposed != address(0), \\\"zero address\\\");\\n\\n        (bytes32 preLockId, uint256 idx) = generatePreLockId();\\n        lockId = keccak256(\\n            abi.encodePacked(\\n                preLockId,\\n                _selector,\\n                _proposed\\n            )\\n        );\\n        lockRequestIdx = idx;\\n\\n        _m[lockId] = AdminUpdateRequest({\\n            proposed : _proposed\\n        });\\n    }\\n\\n    function requestCustodianChange(address _proposedCustodian) external returns (bytes32 lockId) {\\n        (bytes32 preLockId, uint256 lockRequestIdx) = _requestChange(custodianChangeReqs, this.requestCustodianChange.selector, _proposedCustodian);\\n        emit CustodianChangeRequested(preLockId, msg.sender, _proposedCustodian, lockRequestIdx);\\n        return preLockId;\\n    }\\n\\n    function requestValidSenderAdd(address _sender) external returns (bytes32 lockId) {\\n        (bytes32 preLockId, uint256 lockRequestIdx) = _requestChange(ownerAddReqs, this.requestValidSenderAdd.selector, _sender);\\n        emit ValidSenderAddRequested(preLockId, msg.sender, _sender, lockRequestIdx);\\n        return preLockId;\\n    }\\n\\n    function _getPrevSender(address student) private view returns(address) {\\n        address currentAddress = GUARD;\\n        while(_validSenderSet[currentAddress] != GUARD) {\\n            if (_validSenderSet[currentAddress] == student) {\\n                return currentAddress;\\n            }\\n            currentAddress = _validSenderSet[currentAddress];\\n        }\\n        return address(0);\\n    }\\n\\n    function removeValidSender(address sender) external {\\n        _requireOnlyValidSender();\\n        _removeValidSender(sender);\\n    }\\n\\n    function removeAllValidSenders() external {\\n        _requireOnlyValidSender();\\n        address currentAddress = GUARD;\\n        while(_validSenderSet[currentAddress] != GUARD) {\\n            address sender = _validSenderSet[currentAddress];\\n            _removeValidSender(sender);\\n        }\\n    }\\n\\n    function isValidSender(address sender) public view returns (bool) {\\n        return _validSenderSet[sender] != address(0);\\n    }\\n\\n    function _addValidSender(address sender) private {\\n        require(!isValidSender(sender));\\n        _validSenderSet[sender] = _validSenderSet[GUARD];\\n        _validSenderSet[GUARD] = sender;\\n        setSize++;\\n    }\\n\\n    function _removeValidSender(address sender) private {\\n        address prevSender = _getPrevSender(sender);\\n        _validSenderSet[prevSender] = _validSenderSet[sender];\\n        _validSenderSet[sender] = address(0);\\n        setSize--;\\n    }\\n\\n    function getValidSenderSet() public view returns (address[] memory) {\\n        address[] memory validSenderList = new address[](setSize);\\n        address currentAddress = _validSenderSet[GUARD];\\n        for(uint256 i = 0; currentAddress != GUARD; ++i) {\\n            validSenderList[i] = currentAddress;\\n            currentAddress = _validSenderSet[currentAddress];\\n        }\\n        return validSenderList; \\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/registry/LockRequestable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2022 Gemini Trust Company LLC. All Rights Reserved\\npragma solidity 0.8.x;\\n\\n\\n/** @title  A contract for generating unique identifiers\\n  *\\n  * @notice  A contract that provides a identifier generation scheme,\\n  * guaranteeing uniqueness across all contracts that inherit from it,\\n  * as well as unpredictability of future identifiers.\\n  *\\n  * @dev  This contract is intended to be inherited by any contract that\\n  * implements the callback software pattern for cooperative custodianship.\\n  *\\n  * @author  Gemini Trust Company, LLC\\n  */\\nabstract contract LockRequestable {\\n\\n    // MEMBERS\\n    /// @notice  the count of all invocations of `generateLockId`.\\n    uint256 public lockRequestCount;\\n\\n    constructor() {\\n        lockRequestCount = 0;\\n    }\\n\\n    // FUNCTIONS\\n    /** @notice  Returns a fresh unique identifier.\\n      *\\n      * @dev the generation scheme uses three components.\\n      * First, the blockhash of the previous block.\\n      * Second, the deployed address.\\n      * Third, the next value of the counter.\\n      * This ensure that identifiers are unique across all contracts\\n      * following this scheme, and that future identifiers are\\n      * unpredictable.\\n      *\\n      * @return  preLockId  a 32-byte unique identifier.\\n      * @return  lockRequestIdx  index of lock request\\n      */\\n    function generatePreLockId() internal returns (bytes32 preLockId, uint256 lockRequestIdx) {\\n        lockRequestIdx = ++lockRequestCount;\\n        preLockId = keccak256(\\n            abi.encodePacked(\\n                blockhash(block.number - 1),\\n                address(this),\\n                lockRequestIdx\\n            )\\n        );\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceCurrencyUSD_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recoveryAdmin_\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"validSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_lockId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newCustodian\",\"type\":\"address\"}],\"name\":\"CustodianChangeConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_lockId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_msgSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_proposedCustodian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lockRequestIdx\",\"type\":\"uint256\"}],\"name\":\"CustodianChangeRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"}],\"name\":\"NiftySale1155\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"}],\"name\":\"NiftySale721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_lockId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newValidSender\",\"type\":\"address\"}],\"name\":\"ValidSenderAddConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_lockId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_msgSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_proposed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lockRequestIdx\",\"type\":\"uint256\"}],\"name\":\"ValidSenderAddRequested\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_priceCurrencyETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_priceCurrencyUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_validSenderSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"lockId\",\"type\":\"bytes32\"}],\"name\":\"confirmCustodianChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"lockId\",\"type\":\"bytes32\"}],\"name\":\"confirmValidSenderAdd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"custodian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"custodianChangeReqs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct NiftyEventBatch[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"refund\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct NiftyEventBatch[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleBatchHandler\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleEth1155\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"count\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEvent[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleEth1155batch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"count\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEventHandler[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleEth1155batchHandler\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleEth1155handler\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleEth721\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"price\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"sellerProceeds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenContract\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"seller\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"buyer\",\"type\":\"address[]\"}],\"name\":\"executeSaleEth721batch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEventHandler[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleEth721batchHandler\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleEth721handler\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiverCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleReceiver1eth1155\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiverCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleReceiver1eth1155handler\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"}],\"name\":\"executeSaleReceiver1eth721\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiverCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleReceiver1eth721handler\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiverCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEvent\",\"name\":\"ne\",\"type\":\"tuple\"}],\"name\":\"executeSaleReceiver1token1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiverCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEventHandler\",\"name\":\"ne\",\"type\":\"tuple\"}],\"name\":\"executeSaleReceiver1token1155handler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEvent\",\"name\":\"ne\",\"type\":\"tuple\"}],\"name\":\"executeSaleReceiver1token721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEventHandler\",\"name\":\"ne\",\"type\":\"tuple\"}],\"name\":\"executeSaleReceiver1token721handler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEvent\",\"name\":\"ne\",\"type\":\"tuple\"}],\"name\":\"executeSaleReceiverNeth1155\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"count\",\"type\":\"uint256[]\"},{\"internalType\":\"address[][]\",\"name\":\"receiverCreators\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEvent[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleReceiverNeth1155batch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"count\",\"type\":\"uint256[]\"},{\"internalType\":\"address[][]\",\"name\":\"receiverCreators\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEventHandler[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleReceiverNeth1155batchHandler\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEventHandler\",\"name\":\"ne\",\"type\":\"tuple\"}],\"name\":\"executeSaleReceiverNeth1155handler\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEvent\",\"name\":\"ne\",\"type\":\"tuple\"}],\"name\":\"executeSaleReceiverNeth721\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"receiverCreators\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEvent[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleReceiverNeth721batch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"receiverCreators\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEventHandler[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleReceiverNeth721batchHandler\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEventHandler\",\"name\":\"ne\",\"type\":\"tuple\"}],\"name\":\"executeSaleReceiverNeth721handler\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEvent\",\"name\":\"ne\",\"type\":\"tuple\"}],\"name\":\"executeSaleReceiverNtoken1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"count\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct NiftyEventReceiver[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleReceiverNtoken1155batch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"count\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct NiftyEventReceiverHandler[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleReceiverNtoken1155batchHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEventHandler\",\"name\":\"ne\",\"type\":\"tuple\"}],\"name\":\"executeSaleReceiverNtoken1155handler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEvent\",\"name\":\"ne\",\"type\":\"tuple\"}],\"name\":\"executeSaleReceiverNtoken721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct NiftyEventReceiver[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleReceiverNtoken721batch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct NiftyEventReceiverHandler[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleReceiverNtoken721batchHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"receiverCreators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"receiverAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEventHandler\",\"name\":\"ne\",\"type\":\"tuple\"}],\"name\":\"executeSaleReceiverNtoken721handler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleToken1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"count\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"priceCurrency\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEvent[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleToken1155batch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"count\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"priceCurrency\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEventHandler[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleToken1155batchHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleToken1155handler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleToken721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"priceCurrency\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEvent[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleToken721batch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"priceCurrency\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct NiftyEventHandler[]\",\"name\":\"ne\",\"type\":\"tuple[]\"}],\"name\":\"executeSaleToken721batchHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerProceeds\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleToken721handler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleUsd1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"count\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"price\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenContract\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"seller\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"buyer\",\"type\":\"address[]\"}],\"name\":\"executeSaleUsd1155batch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"executeSaleUsd721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"price\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenContract\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"seller\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"buyer\",\"type\":\"address[]\"}],\"name\":\"executeSaleUsd721batch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValidSenderSet\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"isValidSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockRequestCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"ownerAddReqs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"}],\"name\":\"recordSale1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"count\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenContract\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"price\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"priceCurrency\",\"type\":\"address[]\"}],\"name\":\"recordSale1155batch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceCurrency\",\"type\":\"address\"}],\"name\":\"recordSale721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenContract\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"price\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"priceCurrency\",\"type\":\"address[]\"}],\"name\":\"recordSale721batch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeAllValidSenders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"removeValidSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proposedCustodian\",\"type\":\"address\"}],\"name\":\"requestCustodianChange\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"lockId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"requestValidSenderAdd\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"lockId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "NiftyExchangeExecutor", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000002d5d20c50320de5c9861350c4f760e26de0c2dc70000000000000000000000008fe2f09f3684284e15822285d444c13d2cb992100000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000100000000000000000000000015f8733104b67f17158c417d32172eea56c3b61d", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}