{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC721 {\r\n    function ownerOf(uint256 tokenId_) external view returns (address);\r\n    function transferFrom(address from_, address to_, uint256 tokenId_) external;\r\n}\r\ninterface IGasGangsters {\r\n    function mintAsController(address to_, uint256 tokenId_) external;\r\n}\r\n\r\nabstract contract Ownable {\r\n    event OwnershipTransferred(address indexed oldOwner, address indexed newOwner);\r\n    address public owner; \r\n    constructor() { owner = msg.sender; }\r\n    modifier onlyOwner { require(owner == msg.sender, \"Not Owner!\"); _; }\r\n    function transferOwnership(address new_) external { \r\n        address _oldOwner = owner;\r\n        require(_oldOwner == msg.sender, \"Not Owner!\");\r\n        owner = new_; \r\n        emit OwnershipTransferred(_oldOwner, new_);\r\n    }\r\n}\r\n\r\ncontract GasBurner is Ownable {\r\n    // GasBurner is simple.\r\n    // Step 1: Burn the existing ERC721\r\n    // Step 2: Mint the cooresponding ERC721\r\n\r\n    // Interfaces\r\n    IERC721 public GasBox;\r\n    IGasGangsters public GasGangsters;\r\n\r\n    // Constants\r\n    address public constant burnAddress = 0x000000000000000000000000000000000000dEaD;\r\n\r\n    // Constructor\r\n    constructor(address gasBox_, address gasGangsters_) {\r\n        GasBox = IERC721(gasBox_);\r\n        GasGangsters = IGasGangsters(gasGangsters_);\r\n    }\r\n\r\n    // Setters\r\n    function setGasBox(address gasBox_) external onlyOwner {\r\n        GasBox = IERC721(gasBox_);\r\n    }\r\n    function setGasGangsters(address gasGangsters_) external onlyOwner {\r\n        GasGangsters = IGasGangsters(gasGangsters_);\r\n    }\r\n\r\n    // We use the name initiateGangsters because it's on-lore\r\n    function initiateGangsters(uint256[] calldata tokenIds_) external {\r\n        uint256 l = tokenIds_.length;\r\n        uint256 i; unchecked { do {\r\n            // This will \"burn\" the token. Reverts on non-ownership as default behavior\r\n            GasBox.transferFrom(msg.sender, burnAddress, tokenIds_[i]);\r\n            // This will \"mint\" the token using tokenId and SM version of ERC721G\r\n            GasGangsters.mintAsController(msg.sender, tokenIds_[i]);\r\n        } while (++i < l); }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gasBox_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gasGangsters_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GasBox\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GasGangsters\",\"outputs\":[{\"internalType\":\"contract IGasGangsters\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds_\",\"type\":\"uint256[]\"}],\"name\":\"initiateGangsters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gasBox_\",\"type\":\"address\"}],\"name\":\"setGasBox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gasGangsters_\",\"type\":\"address\"}],\"name\":\"setGasGangsters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "GasBurner", "CompilerVersion": "v0.8.16+commit.07a7930e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000a9ba1a433ec326bca975aef9a1641b42717197e70000000000000000000000000f926df0ddb33a1db95088964e09fa8fb47e490e", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://411cedda5b88bb1dcd7444e5ce7f1a2629360b95bb6255b29611f419cbee039b"}]}