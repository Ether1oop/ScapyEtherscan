{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.17;\r\npragma abicoder v1;\r\n\r\n/// @title A helper contract to manage nonce with the series\r\ncontract SeriesNonceManager {\r\n    error AdvanceNonceFailed();\r\n    event NonceIncreased(address indexed maker, uint256 series, uint256 newNonce);\r\n\r\n    // {\r\n    //    1: {\r\n    //        '0x762f73Ad...842Ffa8': 0,\r\n    //        '0xd20c41ee...32aaDe2': 1\r\n    //    },\r\n    //    2: {\r\n    //        '0x762f73Ad...842Ffa8': 3,\r\n    //        '0xd20c41ee...32aaDe2': 15\r\n    //    },\r\n    //    ...\r\n    // }\r\n    mapping(uint256 => mapping(address => uint256)) public nonce;\r\n\r\n    /// @notice Advances nonce by one\r\n    function increaseNonce(uint8 series) external {\r\n        advanceNonce(series, 1);\r\n    }\r\n\r\n    /// @notice Advances nonce by specified amount\r\n    function advanceNonce(uint256 series, uint256 amount) public {\r\n        if (amount == 0 || amount > 255) revert AdvanceNonceFailed();\r\n        unchecked {\r\n            uint256 newNonce = nonce[series][msg.sender] + amount;\r\n            nonce[series][msg.sender] = newNonce;\r\n            emit NonceIncreased(msg.sender, series, newNonce);\r\n        }\r\n    }\r\n\r\n    /// @notice Checks if `makerAddress` has specified `makerNonce` for `series`\r\n    /// @return Result True if `makerAddress` has specified nonce. Otherwise, false\r\n    function nonceEquals(uint256 series, address makerAddress, uint256 makerNonce) public view returns(bool) {\r\n        return nonce[series][makerAddress] == makerNonce;\r\n    }\r\n\r\n    /// @notice Checks passed time against block timestamp\r\n    /// @return Result True if current block timestamp is lower than `time`. Otherwise, false\r\n    function timestampBelow(uint256 time) public view returns(bool) {\r\n        return block.timestamp < time;  // solhint-disable-line not-rely-on-time\r\n    }\r\n\r\n    function timestampBelowAndNonceEquals(uint256 timeNonceSeriesAccount) public view returns(bool) {\r\n        uint256 _time = uint40(timeNonceSeriesAccount >> 216);\r\n        uint256 _nonce = uint40(timeNonceSeriesAccount >> 176);\r\n        uint256 _series = uint16(timeNonceSeriesAccount >> 160);\r\n        address _account = address(uint160(timeNonceSeriesAccount));\r\n        return timestampBelow(_time) && nonceEquals(_series, _account, _nonce);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"AdvanceNonceFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"series\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceIncreased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"series\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"advanceNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"series\",\"type\":\"uint8\"}],\"name\":\"increaseNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"series\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerNonce\",\"type\":\"uint256\"}],\"name\":\"nonceEquals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"timestampBelow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timeNonceSeriesAccount\",\"type\":\"uint256\"}],\"name\":\"timestampBelowAndNonceEquals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SeriesNonceManager", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "1000000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://385f11f78d9b4d8bb4627f0943b04f1fb41fe501bcdf01b91c49f9cd28dbd004"}]}