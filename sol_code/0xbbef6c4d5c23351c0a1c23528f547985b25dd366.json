{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract ERC20 {\r\n\r\n    uint256 public totalSupply; \r\n    uint256 public maxTotalSupply = 4523000000000000000000000;\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function name() external pure returns (string memory) {\r\n        return \"CHANCO\";\r\n    }\r\n\r\n    function symbol() external pure returns (string memory) {\r\n        return \"CHANCO\";\r\n    }\r\n\r\n    function decimals() external pure returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    function _mint(address to_, uint256 _amount) internal {\r\n        uint256 _totalAfterAmount = totalSupply + _amount;\r\n        require(_totalAfterAmount <= maxTotalSupply, \"More than supply\");\r\n        totalSupply += _amount;\r\n        balanceOf[to_] += _amount;\r\n        emit Transfer(address(0x0), to_, _amount);\r\n    }\r\n\r\n    function _burn(address from_, uint256 _amount) internal {\r\n        balanceOf[from_] -= _amount;\r\n        totalSupply -= _amount;\r\n        emit Transfer(from_, address(0x0), _amount);\r\n    }\r\n    \r\n    function _approve(address owner_, address _spender, uint256 _amount) internal {\r\n        allowance[owner_][_spender] = _amount;\r\n        emit Approval(owner_, _spender, _amount);\r\n    }\r\n\r\n    function approve(address _spender, uint256 _amount) public returns (bool) {\r\n        _approve(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to_, uint256 _amount) public returns (bool) {\r\n        balanceOf[msg.sender] -= _amount;\r\n        balanceOf[to_] += _amount;\r\n        emit Transfer(msg.sender, to_, _amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from_, address to_, uint256 _amount) public returns (bool) {\r\n        if (allowance[from_][msg.sender] != type(uint256).max) {\r\n            allowance[from_][msg.sender] -= _amount; }\r\n        balanceOf[from_] -= _amount;\r\n        balanceOf[to_] += _amount;\r\n        emit Transfer(from_, to_, _amount);\r\n        return true;\r\n    }\r\n\r\n    function burn(uint256 _amount) external {\r\n        _burn(msg.sender, _amount);\r\n    }\r\n    \r\n    function burnFrom(address from_, uint256 _amount) public {\r\n        uint256 _currentAllowance = allowance[from_][msg.sender];\r\n        require(_currentAllowance >= _amount, \"Exceeds allowance\");\r\n\r\n        if (allowance[from_][msg.sender] != type(uint256).max) {\r\n            allowance[from_][msg.sender] -= _amount; }\r\n\r\n        _burn(from_, _amount);\r\n    }\r\n}\r\n\r\nabstract contract Ownable {\r\n    address public owner;\r\n    constructor() { owner = msg.sender; }\r\n    modifier onlyOwner { require(owner == msg.sender, \"Not Owner!\"); _; }\r\n    function transferOwnership(address new_) external onlyOwner { owner = new_; }\r\n}\r\n\r\nabstract contract Minter is Ownable {\r\n    mapping(address => bool) public minters;\r\n    modifier onlyMinter { require(minters[msg.sender], \"Not Minter!\"); _; }\r\n    function setMinter(address address_, bool bool_) external onlyOwner {\r\n        minters[address_] = bool_;\r\n    }\r\n}\r\n\r\nabstract contract Burner is Ownable {\r\n    mapping(address => bool) public burners;\r\n    modifier onlyBurner { require(burners[msg.sender], \"Not Burner!\"); _; }\r\n    function setBurner(address address_, bool bool_) external onlyOwner {\r\n        burners[address_] = bool_;\r\n    }\r\n}\r\n\r\ncontract CHANCO is ERC20, Ownable, Minter, Burner {\r\n\r\n    ERC20 public immutable oldToken;\r\n\r\n    bool public paused;\r\n\r\n    constructor (address _oldToken) { \r\n        oldToken = ERC20(_oldToken); \r\n    }\r\n    \r\n    function mintToken(address to_, uint256 _amount) external onlyMinter {\r\n        _mint(to_, _amount);\r\n    }\r\n\r\n    function burnToken(address from_, uint256 _amount) external onlyBurner {\r\n        _burn(from_, _amount);\r\n    }\r\n\r\n    function ownerMint() external onlyOwner {\r\n        _mint(msg.sender, 100);\r\n    }\r\n\r\n    function setPause() external onlyOwner {\r\n        paused = !paused;\r\n    }\r\n\r\n    function migrate() external {\r\n        require(paused, \"Migration paused\");\r\n        uint balance = oldToken.balanceOf(msg.sender);\r\n        oldToken.burnFrom(msg.sender, balance);\r\n        _mint(msg.sender, balance);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"burners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"bool_\",\"type\":\"bool\"}],\"name\":\"setBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"bool_\",\"type\":\"bool\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CHANCO", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000ced7c61617ad24b076729af8ee607a4b30cbf2e4", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://b7c3bffec27900e135bb48e230ccad48f357cab8306ff1a31b116d78ccba0859"}]}