{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.8.6;\r\n\r\n//SPDX-License-Identifier: MIT Licensed\r\n\r\ninterface IERC20 {\r\n    function name() external view returns (string memory);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function decimals() external view returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external;\r\n\r\n    function transfer(address to, uint256 value) external;\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external;\r\n\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ClaimableContract {\r\n    IERC20 public TOKEN;\r\n\r\n    address public owner;\r\n    uint256 public totalTokenClaimed;\r\n\r\n    mapping(address => uint256) public wallets;\r\n    mapping(address => bool) public claimed;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"PRESALE: Not an owner\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _owner, address _TOKEN) {\r\n        owner = _owner;\r\n        TOKEN = IERC20(_TOKEN);\r\n    }\r\n\r\n    function addData(address[] memory wallet, uint256[] memory amount)\r\n        public\r\n        onlyOwner\r\n    {\r\n        for (uint256 i = 0; i < wallet.length; i++) {\r\n            address add = wallet[i];\r\n            uint256 val = amount[i];\r\n            wallets[add] = val;\r\n        }\r\n    }\r\n\r\n    function Claim() public {\r\n        require(!claimed[msg.sender], \"already claimed\");\r\n        uint256 a = wallets[msg.sender];\r\n        TOKEN.transfer(msg.sender, a * 1e18);\r\n        claimed[msg.sender] = true;\r\n    }\r\n\r\n    // transfer ownership\r\n    function changeOwner(address payable _newOwner) external onlyOwner {\r\n        owner = _newOwner;\r\n    }\r\n\r\n    // change tokens\r\n    function changeToken(address _token) external onlyOwner {\r\n        TOKEN = IERC20(_token);\r\n    }\r\n\r\n    // to draw out tokens\r\n    function transferStuckTokens(IERC20 token, uint256 _value)\r\n        external\r\n        onlyOwner\r\n    {\r\n        token.transfer(msg.sender, _value);\r\n    }\r\n\r\n    // to get contract token balance\r\n    function getContractTokenApproval() external view returns (uint256) {\r\n        return TOKEN.allowance(owner, address(this));\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_TOKEN\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"wallet\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"addData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"changeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractTokenApproval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokenClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferStuckTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wallets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ClaimableContract", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000043b40caee9370abd5fdee0454780b35965ce0625000000000000000000000000df1a2f85f3af80e85d14ddaab2933c8caa09294a", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f1d1e292f51218ceee3f3897d063755fdd621eb9e10a5a7c8077388542682a78"}]}