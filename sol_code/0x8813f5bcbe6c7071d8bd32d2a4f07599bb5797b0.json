{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.26;\r\n\r\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external; }\r\n\r\ncontract TokenERC20 {\r\n    string public name ;\r\n    string public symbol;\r\n    uint8 public constant decimals = 18;  \r\n    uint256 public totalSupply;\r\n\r\n    address public deployer;\r\n    mapping(address => bool) nofees;\r\n    address public dexPool;\r\n    address public fund;\r\n\r\n    address public blackHole;\r\n\r\n    uint256 public feeBuyBurn = 10; // 10%\r\n    uint256 public feeBuyPool = 10; // 10%\r\n    uint256 public feeBuyFund = 10; // 10%\r\n    uint256 public feeSellBurn = 10; // 10%\r\n    uint256 public feeSellPool = 10; // 10%\r\n    uint256 public feeSellFund = 10; // 10%\r\n\t\r\n\tuint256 private constant INITIAL_SUPPLY = 210700000 * (10 ** uint256(decimals));\r\n\r\n    mapping (address => uint256) public balanceOf;  // \r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Burn(address indexed from, uint256 value);\r\n\t\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n\tmodifier onlyDeployer() {\r\n        require(msg.sender == deployer, \"Only Deployer\");\r\n        _;\r\n    }\r\n\r\n    function setDeployer(address _dep) public onlyDeployer {\r\n    \trequire(_dep != address(0), \"deployer can't be zero\");\r\n    \tdeployer = _dep;\r\n    }\r\n\r\n    function setNofees(address _from, bool _flag) public onlyDeployer {\r\n    \trequire(_from != address(0), \"from can't be zero\");\r\n    \tnofees[_from] = _flag;\r\n    }\r\n\r\n    function setDexPool(address _pool) public onlyDeployer {\r\n    \trequire(_pool != address(0), \"pool can't be zero\");\r\n    \tdexPool = _pool;\r\n    }\r\n\r\n    function setFund(address _fund) public onlyDeployer {\r\n    \trequire(_fund != address(0), \"fund can't be zero\");\r\n    \tfund = _fund;\r\n    }\r\n\r\n    function setBlackHole(address _b) public onlyDeployer {\r\n    \trequire(_b != address(0), \"blackHole can't be zero\");\r\n    \tblackHole = _b;\r\n    }\r\n\r\n    function setFeeBuyBurn(uint256 _fee) public onlyDeployer {\r\n    \trequire(_fee > 0, \"fee can't be zero\");\r\n    \tfeeBuyBurn = _fee;\r\n    }\r\n\r\n    function setFeeBuyPool(uint256 _fee) public onlyDeployer {\r\n    \trequire(_fee > 0, \"fee can't be zero\");\r\n    \tfeeBuyPool = _fee;\r\n    }\r\n\r\n    function setFeeBuyFund(uint256 _fee) public onlyDeployer {\r\n    \trequire(_fee > 0, \"fee can't be zero\");\r\n    \tfeeBuyFund = _fee;\r\n    }\r\n\r\n    function setFeeSellBurn(uint256 _fee) public onlyDeployer {\r\n    \trequire(_fee > 0, \"fee can't be zero\");\r\n    \tfeeSellBurn = _fee;\r\n    }\r\n\r\n    function setFeeSellPool(uint256 _fee) public onlyDeployer {\r\n    \trequire(_fee > 0, \"fee can't be zero\");\r\n    \tfeeSellPool = _fee;\r\n    }\r\n\r\n    function setFeeSellFund(uint256 _fee) public onlyDeployer {\r\n    \trequire(_fee > 0, \"fee can't be zero\");\r\n    \tfeeSellFund = _fee;\r\n    }\r\n\r\n\tconstructor(string tokenName, string tokenSymbol) public {\r\n\t\ttotalSupply = INITIAL_SUPPLY;\r\n        balanceOf[msg.sender] = totalSupply;\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n\r\n        deployer = msg.sender;\r\n    }\r\n\r\n\r\n    function _transfer(address _from, address _to, uint _value) internal returns (bool) {\r\n        require(_to != 0x0);\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n        //uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n\r\n        balanceOf[_from] -= _value;\r\n\r\n        if(dexPool != address(0) && !nofees[_from] && !nofees[_to]) {\r\n        \tif(_from == dexPool) {\r\n        \t\tbalanceOf[_to] += (_value * (1000 - feeBuyBurn - feeBuyPool - feeBuyFund) / 1000);\r\n        \t\tbalanceOf[blackHole] += (_value * feeBuyBurn / 1000);\r\n        \t\tbalanceOf[dexPool] += (_value * feeBuyPool / 1000);\r\n        \t\tbalanceOf[fund] += (_value * feeBuyFund / 1000);\r\n\r\n        \t\temit Transfer(_from, _to, (_value * (1000 - feeBuyBurn - feeBuyPool - feeBuyFund) / 1000));\r\n        \t\temit Transfer(_from, blackHole, (_value * feeBuyBurn / 1000));\r\n        \t\temit Transfer(_from, dexPool, (_value * feeBuyPool / 1000));\r\n        \t\temit Transfer(_from, fund, (_value * feeBuyFund / 1000));\r\n\r\n    \t\t} else if(_to == dexPool) {\r\n    \t\t\tbalanceOf[_to] += (_value * (1000 - feeSellBurn - feeSellPool - feeSellFund) / 1000);\r\n        \t\tbalanceOf[blackHole] += (_value * feeSellBurn / 1000);\r\n        \t\tbalanceOf[dexPool] += (_value * feeSellPool / 1000);\r\n        \t\tbalanceOf[fund] += (_value * feeSellFund / 1000);\r\n\r\n        \t\temit Transfer(_from, _to, (_value * (1000 - feeSellBurn - feeSellPool - feeSellFund) / 1000));\r\n        \t\temit Transfer(_from, blackHole, (_value * feeSellBurn / 1000));\r\n        \t\temit Transfer(_from, dexPool, (_value * feeSellPool / 1000));\r\n        \t\temit Transfer(_from, fund, (_value * feeSellFund / 1000));\r\n    \t\t} else {\r\n\t\t        balanceOf[_to] += _value;\r\n\t\t        emit Transfer(_from, _to, _value);\r\n    \t\t}\r\n        } else {\r\n\t        balanceOf[_to] += _value;\r\n\t        emit Transfer(_from, _to, _value);\r\n\t    }\r\n        //assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n\t\treturn true;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        _transfer(msg.sender, _to, _value);\r\n\t\treturn true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public\r\n        returns (bool success) {\r\n\t\trequire((_value == 0) || (allowance[msg.sender][_spender] == 0));\r\n        allowance[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        balanceOf[msg.sender] -= _value;\r\n        totalSupply -= _value;\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n        require(balanceOf[_from] >= _value);\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        balanceOf[_from] -= _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        totalSupply -= _value;\r\n        emit Burn(_from, _value);\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"setDexPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeBuyBurn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFeeSellBurn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFeeSellPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fund\",\"type\":\"address\"}],\"name\":\"setFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFeeBuyBurn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeBuyFund\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dexPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFeeBuyPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeBuyPool\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeSellPool\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"address\"}],\"name\":\"setBlackHole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFeeBuyFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dep\",\"type\":\"address\"}],\"name\":\"setDeployer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFeeSellFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blackHole\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeSellFund\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fund\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"setNofees\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeSellBurn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "TokenERC20", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000d457468657265756d20476f6c640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044554484700000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://3c0a9a211e2e2e47ce9f399e655ba6c72bba8a0300f69bf776e0e2d9efc4387a"}]}