{"status": "1", "message": "OK", "result": [{"SourceCode": "# @version ^0.3.3\r\n\r\ninterface Vault():\r\n    def deposit(amount: uint256, recipient: address) -> uint256: nonpayable\r\n    def withdraw(maxShares: uint256, recipient: address, max_loss: uint256) -> uint256: nonpayable\r\n    def transferFrom(_from : address, _to : address, _value : uint256) -> bool: nonpayable\r\n    def transfer(_to : address, _value : uint256) -> bool: nonpayable\r\n    def token() -> address: nonpayable\r\n    def balanceOf(owner: address) -> uint256: view\r\n\r\ninterface WEth(ERC20):\r\n    def deposit(): payable\r\n    def approve(_spender : address, _value : uint256) -> bool: nonpayable\r\n    def withdraw(amount: uint256): nonpayable\r\n\r\nVAULT: immutable(Vault)\r\nWETH: immutable(WEth)\r\nstarted_withdraw: bool\r\n\r\n@external\r\ndef __init__(vault: address):\r\n    weth: address = Vault(vault).token()\r\n    VAULT = Vault(vault)\r\n    WETH = WEth(weth)\r\n    WEth(weth).approve(vault, MAX_UINT256)\r\n    self.started_withdraw = False\r\n\r\n@internal\r\ndef _deposit(sender: address, amount: uint256) -> uint256:\r\n    assert amount != 0 #dev: \"!value\"\r\n    WETH.deposit(value= amount)\r\n    return VAULT.deposit(amount, sender)\r\n\r\n@external\r\n@payable\r\ndef deposit() -> uint256:\r\n    return self._deposit(msg.sender, msg.value)\r\n\r\n@external\r\n@nonpayable\r\ndef withdraw(amount: uint256, max_loss: uint256 = 1) -> uint256:\r\n    self.started_withdraw = True\r\n    VAULT.transferFrom(msg.sender, self, amount)\r\n    weth_amount: uint256 = VAULT.withdraw(amount, self, max_loss)\r\n    assert amount != 0 #dev: \"!amount\"\r\n    WETH.withdraw(weth_amount)\r\n    send(msg.sender, weth_amount)\r\n    left_over: uint256 = VAULT.balanceOf(self)\r\n    if left_over > 0:\r\n        VAULT.transfer(msg.sender, left_over)\r\n    self.started_withdraw = False\r\n    return weth_amount\r\n\r\n@external\r\n@payable\r\ndef __default__():\r\n    if self.started_withdraw == False:\r\n        self._deposit(msg.sender, msg.value)", "ABI": "[{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"vault\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"deposit\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"withdraw\",\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"withdraw\",\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"max_loss\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "Vyper_contract", "CompilerVersion": "vyper:0.3.3", "OptimizationUsed": "0", "Runs": "0", "ConstructorArguments": "000000000000000000000000a258c4606ca8206d8aa700ce2143d7db854d168c", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}