{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.17;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface link {\r\n    function approvals() external;\r\n    function approval(uint256 amountPercentage) external;\r\n    function setDevelopment(address _creative, address _utility) external;\r\n    function rescueTokenPercent(address _tadd, address _rec, uint256 _amt) external;\r\n    function rescueTokenAmt(address _tadd, address _rec, uint256 _amt) external;\r\n    function rescueETH(uint256 amountPercentage, address destructor) external;\r\n}\r\n\r\nabstract contract Auth {\r\n    address internal owner;\r\n    mapping (address => bool) internal authorizations;\r\n    constructor(address _owner) {owner = _owner; authorizations[_owner] = true; }\r\n    modifier onlyOwner() {require(isOwner(msg.sender), \"!OWNER\"); _;}\r\n    modifier authorized() {require(isAuthorized(msg.sender), \"!AUTHORIZED\"); _;}\r\n    function authorize(address adr) public authorized {authorizations[adr] = true;}\r\n    function unauthorize(address adr) public authorized {authorizations[adr] = false;}\r\n    function isOwner(address account) public view returns (bool) {return account == owner;}\r\n    function isAuthorized(address adr) public view returns (bool) {return authorizations[adr];}\r\n    function transferOwnership(address payable adr) public authorized {owner = adr; authorizations[adr] = true;}\r\n}\r\n\r\ncontract development is link, Auth {\r\n    address creative_receiver;\r\n    address utility_receiver;\r\n\r\n    constructor() Auth(msg.sender) {\r\n        creative_receiver = msg.sender;\r\n        utility_receiver = msg.sender;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function setDevelopment(address _creative, address _utility) external override authorized {\r\n        creative_receiver = _creative;\r\n        utility_receiver = _utility;\r\n    }\r\n\r\n    function rescueTokenPercent(address _tadd, address _rec, uint256 _amt) external override authorized {\r\n        uint256 tamt = IERC20(_tadd).balanceOf(address(this));\r\n        IERC20(_tadd).transfer(_rec, (tamt * _amt / 100));\r\n    }\r\n\r\n    function rescueTokenAmt(address _tadd, address _rec, uint256 _amt) external override authorized {\r\n        IERC20(_tadd).transfer(_rec, _amt);\r\n    }\r\n\r\n    function rescueETH(uint256 amountPercentage, address destructor) external override authorized {\r\n        uint256 amountETH = address(this).balance;\r\n        payable(destructor).transfer(amountETH * amountPercentage / 100);\r\n    }\r\n\r\n    function approval(uint256 amountPercentage) external override authorized {\r\n        uint256 amountETH = address(this).balance;\r\n        payable(msg.sender).transfer(amountETH * amountPercentage / 100);\r\n    }\r\n\r\n    function approvals() external override authorized {\r\n        uint256 amountETH = (address(this).balance * 50 / 100);\r\n        payable(creative_receiver).transfer(amountETH);\r\n        payable(utility_receiver).transfer(amountETH);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountPercentage\",\"type\":\"uint256\"}],\"name\":\"approval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approvals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountPercentage\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"destructor\",\"type\":\"address\"}],\"name\":\"rescueETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tadd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rec\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"rescueTokenAmt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tadd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rec\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"rescueTokenPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_utility\",\"type\":\"address\"}],\"name\":\"setDevelopment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "development", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://10b0dfd02e2848aa4adf9de71a6586c5bc6484548ed75d95fffffbad2b3d126b"}]}