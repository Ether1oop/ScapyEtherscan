{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"lib/UDS/src/proxy/ERC1967Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// ------------- storage\\n\\n// keccak256(\\\"eip1967.proxy.implementation\\\") - 1 = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\nbytes32 constant ERC1967_PROXY_STORAGE_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\nfunction s() pure returns (ERC1967UpgradeDS storage diamondStorage) {\\n    assembly { diamondStorage.slot := ERC1967_PROXY_STORAGE_SLOT } // prettier-ignore\\n}\\n\\nstruct ERC1967UpgradeDS {\\n    address implementation;\\n}\\n\\n// ------------- errors\\n\\nerror InvalidUUID();\\nerror NotAContract();\\n\\n/// @notice ERC1967\\n/// @author phaze (https://github.com/0xPhaze/UDS)\\nabstract contract ERC1967 {\\n    event Upgraded(address indexed implementation);\\n\\n    function _upgradeToAndCall(address logic, bytes memory data) internal {\\n        if (logic.code.length == 0) revert NotAContract();\\n\\n        if (ERC1822(logic).proxiableUUID() != ERC1967_PROXY_STORAGE_SLOT) revert InvalidUUID();\\n\\n        if (data.length != 0) {\\n            (bool success, ) = logic.delegatecall(data);\\n\\n            if (!success) {\\n                assembly {\\n                    returndatacopy(0, 0, returndatasize())\\n                    revert(0, returndatasize())\\n                }\\n            }\\n        }\\n\\n        emit Upgraded(logic);\\n\\n        s().implementation = logic;\\n    }\\n}\\n\\n/// @notice Minimal ERC1967Proxy\\n/// @author phaze (https://github.com/0xPhaze/UDS)\\ncontract ERC1967Proxy is ERC1967 {\\n    constructor(address logic, bytes memory data) payable {\\n        _upgradeToAndCall(logic, data);\\n    }\\n\\n    fallback() external payable {\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n\\n            let success := delegatecall(gas(), sload(ERC1967_PROXY_STORAGE_SLOT), 0, calldatasize(), 0, 0)\\n\\n            returndatacopy(0, 0, returndatasize())\\n\\n            if success {\\n                return(0, returndatasize())\\n            }\\n\\n            revert(0, returndatasize())\\n        }\\n    }\\n}\\n\\n/// @notice ERC1822\\n/// @author phaze (https://github.com/0xPhaze/UDS)\\nabstract contract ERC1822 {\\n    function proxiableUUID() external view virtual returns (bytes32);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"CRFTD/=src/\",\r\n      \"ERC721A/=lib/fx-contracts/lib/ERC721M/lib/ERC721A/contracts/\",\r\n      \"ERC721M/=lib/fx-contracts/lib/ERC721M/src/\",\r\n      \"UDS/=lib/UDS/src/\",\r\n      \"ds-test/=lib/solmate/lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"futils/=lib/futils/src/\",\r\n      \"fx-contracts/=lib/fx-contracts/src/\",\r\n      \"fx-portal/=lib/fx-contracts/lib/ERC721M/lib/fx-portal/contracts/\",\r\n      \"openzeppelin/=lib/fx-contracts/lib/ERC721M/lib/openzeppelin-contracts/\",\r\n      \"solmate/=lib/solmate/src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 100000\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAContract\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "ERC1967Proxy", "CompilerVersion": "v0.8.15+commit.e14f2714", "OptimizationUsed": "1", "Runs": "100000", "ConstructorArguments": "000000000000000000000000783f2136640c396805bf8488543abce4cf4cf870000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c47029144c0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000095649424520436f696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004564942450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0x178dec1e0219e3e09b1e2838982612b508c373d3", "SwarmSource": ""}]}